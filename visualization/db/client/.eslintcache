[{"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/index.js":"1","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/App.js":"2","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/reportWebVitals.js":"3","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/navbar.jsx":"4","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/Dashboard.js":"5","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/index.js":"6","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/vis.js":"7","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/search.jsx":"8","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic.js":"9","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/colorScale.js":"10","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/legend.jsx":"11","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawLegend.js":"12","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/info.jsx":"13","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/recommend.jsx":"14","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/index.js":"15","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/vis.js":"16","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/HiddenBox.js":"17","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/graphWeight.js":"18","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/cloud.jsx":"19","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawCloud.js":"20","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic2.js":"21","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/detailedKey.js":"22","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/cloud.js":"23","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/index.js":"24","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/App.js":"25","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/graphWeight.js":"26","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/detailedKey.js":"27","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic.js":"28","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/index.js":"29","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/index.js":"30","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/navbar.jsx":"31","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/search.jsx":"32","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/recommend.jsx":"33","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/info.jsx":"34","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/legend.jsx":"35","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/cloud.jsx":"36","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawCloud.js":"37","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/vis.js":"38","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/vis.js":"39","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/colorScale.js":"40","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawLegend.js":"41","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/HiddenBox.js":"42","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/cloud.js":"43","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic2.js":"44","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardT.js":"45","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardR.js":"46","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/index.js":"47","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/vis.js":"48","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/year.jsx":"49","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/index.js":"50","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/vis.js":"51"},{"size":392,"mtime":1610106219518,"results":"52","hashOfConfig":"53"},{"size":509,"mtime":1612857736073,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1610104313633,"results":"55","hashOfConfig":"53"},{"size":595,"mtime":1612857709862,"results":"56","hashOfConfig":"53"},{"size":11026,"mtime":1612447054159,"results":"57","hashOfConfig":"53"},{"size":298,"mtime":1610178825220,"results":"58","hashOfConfig":"53"},{"size":5301,"mtime":1611411961820,"results":"59","hashOfConfig":"53"},{"size":3668,"mtime":1610506988825,"results":"60","hashOfConfig":"53"},{"size":1494,"mtime":1612861808705,"results":"61","hashOfConfig":"53"},{"size":417,"mtime":1610783300987,"results":"62","hashOfConfig":"53"},{"size":1449,"mtime":1611411713350,"results":"63","hashOfConfig":"53"},{"size":1051,"mtime":1610181168700,"results":"64","hashOfConfig":"53"},{"size":468,"mtime":1610262313688,"results":"65","hashOfConfig":"53"},{"size":3305,"mtime":1612442482056,"results":"66","hashOfConfig":"53"},{"size":346,"mtime":1610613668023,"results":"67","hashOfConfig":"53"},{"size":5165,"mtime":1612447030197,"results":"68","hashOfConfig":"53"},{"size":1226,"mtime":1613977030611,"results":"69","hashOfConfig":"53"},{"size":73179,"mtime":1613661170853,"results":"70","hashOfConfig":"53"},{"size":327,"mtime":1611124113855,"results":"71","hashOfConfig":"53"},{"size":2407,"mtime":1613653738135,"results":"72","hashOfConfig":"53"},{"size":1490,"mtime":1610785091378,"results":"73","hashOfConfig":"53"},{"size":96827,"mtime":1611023333895,"results":"74","hashOfConfig":"53"},{"size":6789,"mtime":1611123785928,"results":"75","hashOfConfig":"53"},{"size":356,"mtime":1614257970882,"results":"76","hashOfConfig":"77"},{"size":613,"mtime":1614257927008,"results":"78","hashOfConfig":"77"},{"size":73179,"mtime":1613661170853,"results":"79","hashOfConfig":"77"},{"size":96827,"mtime":1611023333895,"results":"80","hashOfConfig":"77"},{"size":1494,"mtime":1614335719471,"results":"81","hashOfConfig":"77"},{"size":346,"mtime":1610613668023,"results":"82","hashOfConfig":"77"},{"size":298,"mtime":1610178825220,"results":"83","hashOfConfig":"77"},{"size":707,"mtime":1614258108889,"results":"84","hashOfConfig":"77"},{"size":3663,"mtime":1614314918231,"results":"85","hashOfConfig":"77"},{"size":3305,"mtime":1612442482056,"results":"86","hashOfConfig":"77"},{"size":352,"mtime":1614576825236,"results":"87","hashOfConfig":"77"},{"size":2531,"mtime":1615125194835,"results":"88","hashOfConfig":"77"},{"size":300,"mtime":1614042598049,"results":"89","hashOfConfig":"77"},{"size":2957,"mtime":1614329504942,"results":"90","hashOfConfig":"77"},{"size":5893,"mtime":1614582803720,"results":"91","hashOfConfig":"77"},{"size":5165,"mtime":1615124339566,"results":"92","hashOfConfig":"77"},{"size":417,"mtime":1610783300987,"results":"93","hashOfConfig":"77"},{"size":1186,"mtime":1614257062455,"results":"94","hashOfConfig":"77"},{"size":1235,"mtime":1615732675381,"results":"95","hashOfConfig":"77"},{"size":6789,"mtime":1611123785928,"results":"96","hashOfConfig":"77"},{"size":1490,"mtime":1610785091378,"results":"97","hashOfConfig":"77"},{"size":10142,"mtime":1615719025725,"results":"98","hashOfConfig":"77"},{"size":9777,"mtime":1615719538229,"results":"99","hashOfConfig":"77"},{"size":340,"mtime":1614332019728,"results":"100","hashOfConfig":"77"},{"size":2982,"mtime":1614570239670,"results":"101","hashOfConfig":"77"},{"size":735,"mtime":1614582470671,"results":"102","hashOfConfig":"77"},{"size":338,"mtime":1615126418052,"results":"103","hashOfConfig":"77"},{"size":26127,"mtime":1615734355449,"results":"104","hashOfConfig":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},"1e0rv1j",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},"1jszely",{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"165"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"165"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"165"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"165"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"165"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"165"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"165"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"165"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"165"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"165"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"165"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"165"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"165"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"165"},"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/index.js",["233"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport Dashboard from \"./Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);",["234","235"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/App.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/reportWebVitals.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/navbar.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/Dashboard.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { Component } from \"react\";\nimport { select, csv, map } from \"d3\";\nimport { Layout } from \"antd\";\n// import data from \"./data/data\";\n// import View1 from \"./views/View1/index\";\n// import View2 from \"./views/View2/index\";\n// import View3 from \"./views/View3/index\";\n// import View4 from \"./views/View4/index\";\n// import View5 from \"./views/View5/index\";\n// import View6 from \"./views/View6/index\";\nimport \"./dashboard.css\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class Dashboard extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"董笑菊\"],\n    selectedTopic: allTopic,\n    selectedYear: \"2019\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n  };\n  changeYearHandle = (target) => {\n    this.setState({ selectedYear: target.toString() });\n    this.updateLegend();\n    this.updateGraph();\n  };\n  changeTopicHandle = (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else this.setState({ selectedTopic: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  changeMentorHandle = (target) => {\n    this.setState({ selectedMentor: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    let key = isMentor ? \"mentor\" : \"school\";\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n    let newDataTheme = [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ];\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    this.setState({ dataTheme: newDataTheme });\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  updateGraph() {\n    const isMentor = this.props.match.path === \"/Mentor\";\n    const {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      Keys,\n    } = this.state;\n    let edgeSet = [],\n      verticeSet = [];\n    let recomSet = {};\n    if (isMentor) {\n      /*\n      const target = selectedMentor[0];\n      let targetKeys = {};\n      data.forEach((d) => {\n        let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"，\") !== -1) arr = d.keyword.split(\"，\");\n        for (let i = 0; i < arr.length; i++) {\n          */\n      //arr[i] = arr[i].replace(/\\s*/g, \"\");\n      /*\n          if (targetKeys.hasOwnProperty(arr[i])) targetKeys[arr[i]]++;\n          else targetKeys[arr[i]] = 1;\n        }\n      });\n      data.forEach((d)=>{\n        if(d.mentor!==target && )\n      })\n      */\n    } else {\n      const target = selectedTopic[0];\n      const index = allTopic.indexOf(target); //TODO\n      let count = 1;\n      verticeSet.push({\n        name: target,\n        value: 10,\n      });\n\n      let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n        return weight[index][b] - weight[index][a];\n      });\n      for (let i = 0; i < 8; i++) {\n        recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n      }\n      this.setState({ dataRecom: recomSet });\n      const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n      this.setState({\n        dataRecomKey: temp,\n      });\n      for (let key in weight[index]) {\n        if (weight[index][key] > 0) {\n          verticeSet.push({\n            name: key,\n            value: 3,\n          });\n          edgeSet.push({\n            source: 0,\n            target: count,\n            value: Math.sqrt(2 / weight[index][key]),\n          });\n          count++;\n        }\n      }\n      this.setState({ dataV: verticeSet });\n      this.setState({ dataE: edgeSet });\n      // data.forEach((d) => {\n      //   if (d.year === selectedYear && d.school !== target) {\n      //     for (let tk of targetKeyword) {\n      //       if (d.keyword.indexOf(tk) > -1) {\n      //         if (edgeSet.hasOwnProperty(d.school)) edgeSet[d.school]++;\n      //         else edgeSet[d.school] = 1;\n      //       }\n      //     }\n      //   }\n      // });\n    }\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataV,\n      dataE,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n    } = this.state;\n\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <header>\n          <h1>交通大学论文系统</h1>\n          <div class=\"showTime\"></div>\n        </header>\n        <section>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel profile\">\n                <div class=\"boxhead\">查询 Search</div>\n                <Search\n                  onChangeTopic={this.changeTopicHandle}\n                  onChangeMentor={this.changeMentorHandle}\n                  isMentor={isMentor}\n                />\n                <Legend\n                  selectedTopic={selectedTopic}\n                  selectedMentor={selectedMentor}\n                  data={dataLegend}\n                  selectedYear={selectedYear}\n                  isMentor={isMentor}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel themeriver\">\n                <div class=\"boxhead\">主题河流 Theme River</div>\n                <ThemeRiver\n                  data={dataTheme}\n                  width={850}\n                  height={230}\n                  isMentor={isMentor}\n                  selectedYear={selectedYear}\n                  onChangeMentor={this.changeMentorHandle}\n                  onChangeYear={this.changeYearHandle}\n                  onChangeTopic={this.changeTopicHandle}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel info\">\n                <div class=\"boxhead\">热点 Hot topics</div>\n                {/* <Info\n                  selectedYear={selectedYear}\n                  selectedMentor={selectedMentor}\n                  selectedTopic={selectedTopic}\n                /> */}\n\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">Recommendation</div>\n                <Recommend\n                  data={dataRecom}\n                  keys={dataRecomKey}\n                  fulldata={data}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel graph\">\n                <div class=\"boxhead\">Hot Topic</div>\n                <Cloud selectedTopic={selectedTopic} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">Graph</div>\n                <Scatter\n                  dataV={dataV}\n                  dataE={dataE}\n                  selectedTopic={selectedTopic}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/vis.js",["253","254","255","256","257","258","259"],"import * as d3 from \"d3\";\nimport _, { floor } from \"lodash\";\nimport colorScale from \"../../colorScale\";\nimport \"./style.css\";\nimport allTopic from \"../../data/allTopic\";\n\nconst draw = ({\n  data,\n  width,\n  height,\n  isMentor,\n  onChangeMentor,\n  selectedYear,\n  onChangeYear,\n  onChangeTopic,\n}) => {\n  /*\n  data = [\n    { year: \"2015\", Apple: 15, Orange: 10, Cake: 30, Banana: 20, Peach: 20 },\n    { year: \"2016\", Apple: 16, Orange: 7, Cake: 35, Banana: 14, Peach: 10 },\n    { year: \"2017\", Apple: 19, Orange: 6, Cake: 40, Banana: 9, Peach: 22 },\n    { year: \"2018\", Apple: 10, Orange: 9, Cake: 20, Banana: 5, Peach: 20 },\n    { year: \"2019\", Apple: 13, Orange: 8, Cake: 34, Banana: 2, Peach: 21 },\n  ];\n  */\n  let dataPie = [];\n  let count = 0;\n  let yearData; // how many years covered\n  let maxNum = 0; // max number of the sum of all themes in each years\n  let domain = isMentor ? [] : allTopic; // domain of all the themes\n\n  // get the data for pie chart\n  data.forEach((d) => {\n    if (d.year === selectedYear) yearData = d;\n  });\n  /*\n  for (var key in yearData) {\n    if (key != \"year\") {\n      let temp = {};\n      temp[\"count\"] = yearData[key]; // convert the data format to\n      temp[\"label\"] = key;\n      dataPie.push(temp);\n    }\n  }\n*/\n  console.log(data);\n  data.forEach((d) => {\n    var sum = 0;\n    for (var key in d) {\n      if (isMentor && key != \"year\" && domain.indexOf(key) < 0)\n        domain.push(key);\n      if (key != \"year\") sum += d[key];\n    }\n    if (maxNum < sum) maxNum = sum;\n  });\n  console.log(domain);\n  d3.selectAll(\".vis-themeRiver > *\").remove();\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  var svg = d3\n    .select(\".vis-themeRiver\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .attr(\"id\", \"themeVis\");\n  var stackGen = d3.stack().keys(domain).order(d3.stackOrderNone);\n  //.offset(d3.stackOffsetWiggle);\n  var stackedSeries = stackGen(data);\n\n  const Riverscale = 1;\n  // Add X axis --> it is a date format\n  let xScale = d3\n    .scaleLinear()\n    .domain(\n      d3.extent(data, function (d) {\n        return parseInt(d.year);\n      })\n    )\n    .range([0, width / Riverscale]);\n\n  //Add X axis\n  const xAxis = d3.axisBottom(xScale).ticks(data.length, \".4\"); //.tickFormat(format(\".4\"));\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"id\", \"horizontalAxis\")\n    .call(xAxis)\n    .select(\".domain\")\n    .remove();\n\n  // Add Y axis\n  var yScale = d3\n    .scaleLinear()\n    .domain([0, maxNum])\n    .range([height - 20, 0]);\n  svg.append(\"g\").call(d3.axisLeft(yScale));\n  /*\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(domain) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n*/\n  var areaGen = d3\n    .area()\n    .curve(d3.curveBasis)\n    .x((d) => xScale(d.data.year))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  d3.select(\"#themeVis\")\n    .selectAll(\".areas\")\n    .data(stackedSeries)\n    .join(\"path\")\n    .attr(\"d\", areaGen)\n    .attr(\"fill\", (d) => colorScale(d.key, \"T\"))\n    .attr(\"class\", \"theme\");\n\n  //change font size of the axis\n  d3.selectAll(\"#themeVis .tick>text\").each(function (d, i) {\n    d3.select(this).style(\"font-size\", \"14px\");\n  });\n  d3.selectAll(\".theme\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function (event, i) {\n      d3.selectAll(\".theme\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.key) return 1;\n        return 0.8;\n      });\n      d3.selectAll(\".pie\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.data.label) return 1;\n        return 0.8;\n      });\n    })\n    .on(\"click\", function (event, i) {\n      onChangeTopic(i.key);\n    });\n\n  var vertical = d3\n    .select(\".vis-themeRiver\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"19\")\n    .style(\"bottom\", \"0px\")\n    .style(\"left\", \"0px\")\n    .style(\"width\", \"1px\")\n    .style(\"height\", \"280px\")\n    .style(\"background\", \"#fff\");\n  d3.select(\".vis-themeRiver\")\n    .on(\"mousemove\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"mouseover\", function (event) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"click\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] - margin.left;\n      const padding = (width / Riverscale - margin.left) / (data.length - 1);\n      const target = parseInt(mousex / padding) + 2015;\n      onChangeYear(target);\n    });\n\n  /*\n  let radius = Math.min(width, height) / 2;\n\n  let arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  let pie = d3\n    .pie()\n    .value(function (d) {\n      return d.count;\n    })\n    .sort(null);\n  svg\n    .selectAll(\"pie\")\n    .data(pie(dataPie))\n    .enter()\n    .append(\"path\")\n    .attr(\"transform\", \"translate(1000,\" + radius + \")\")\n    .attr(\"d\", arc)\n    .attr(\"class\", \"pie\")\n    .attr(\"fill\", function (d) {\n      return colorScale(d.data.label);\n    });\n    */\n};\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/search.jsx",["260","261"],"import { Divider } from 'antd';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport \"./search.css\"\nclass Search extends Component {\n  state = {  }\n  componentDidMount(){\n  }\n\n  onClick(){\n    let{onChangeTopic, onChangeMentor, isMentor} = this.props;\n    var datalist = document.querySelector(\"#exampleDataList\");\n    if(!isMentor) onChangeTopic(datalist.value);\n    else onChangeMentor(datalist.value)\n    console.log(datalist.value)\n  }\n  render() { \n    //console.log(this.props);\n    const{isMentor} = this.props;\n    //const isMentor = this.props.match.path === \"/Mentor\";\n    if(!isMentor)\n    return (<div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <datalist id=\"datalistOptions\">\n        <option value = \"全选\"></option>\n        <option value=\"安泰经济与管理学院\"/>\n        <option value=\"化学化工学院\"/>\n        <option value=\"药学院\"/>\n        <option value=\"船舶海洋与建筑工程学院\"/>\n        <option value=\"生命科学技术学院\"/>\n        <option value=\"农业与生物学院\"/>\n        <option value=\"物理与天文学院\"/>\n        <option value=\"电子信息与电气工程学院(计算机系)\"/>\n        <option value=\"电子信息与电气工程学院(电气系) Angeles\"/>\n        <option value=\"凯原法学院\"/>\n        <option value=\"电子信息与电气工程学院(电子系)\"/>\n        <option value=\"环境科学与工程学院\"/>\n        <option value=\"塑料成型技术与装备研究院\"/>\n        <option value=\"生物医学工程学院\"/>\n        <option value=\"马克思主义学院\"/>\n        <option value=\"高等教育研究院\"/>\n        <option value=\"国际与公共事务学院\"/>\n        <option value=\"数学科学学院\"/>\n        <option value=\"南加州大学文化创意产业学院\"/>\n        <option value=\"外国语学院\"/>\n        <option value=\"中美物流研究院\"/>\n        <option value=\"设计学院\"/>\n        <option value=\"人文学院\"/>\n        <option value=\"媒体与传播学院\"/>\n        <option value=\"电子信息与电气工程学院(微纳电子系)\"/>\n        <option value=\"电子信息与电气工程学院(微电子学院)\"/>\n        <option value=\"材料科学与工程学院\"/>\n        <option value=\"电子信息与电气工程学院(网络空间安全学院)\"/>\n        <option value=\"电子信息与电气工程学院(软件学院)\"/>\n        <option value=\"系统生物医学研究院\"/>\n        <option value=\"电子信息与电气工程学院(自动化系)\"/>\n        <option value=\"电子信息与电气工程学院\"/>\n        <option value=\"上海交大-巴黎高科卓越工程师学院\"/>\n        <option value=\"电子信息与电气工程学院(仪器系)\"/>\n        <option value=\"航空航天学院\"/>\n        <option value=\"上海交大密西根学院\"/>\n        <option value=\"人文艺术研究院\"/>\n        <option value=\"微纳科学技术研究院\"/>\n        <option value=\"科学史与科学文化研究院\"/>\n        <option value=\"国际教育学院\"/>\n      </datalist>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>);\n    else return(\n      <div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>\n    )\n  }\n}\n \nexport default Search;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/colorScale.js",["262"],"import allTopic from \"./data/allTopic2\";\nfunction colorScale(name, mode) {\n  if (mode === \"T\") {\n    //topic mode\n    var i = 0;\n    var index = allTopic.indexOf(name);\n    index = index + 30;\n    return (\n      \"rgb(\" +\n      Math.abs((255 - index) % 255) +\n      \",\" +\n      Math.abs((255 - index * 2) % 255) +\n      \",\" +\n      Math.abs((255 - index * 2) % 255) +\n      \")\"\n    );\n  }\n}\nexport default colorScale;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/legend.jsx",["263","264","265"],"import React, { Component } from 'react';\nimport colorScale from '../colorScale';\nimport * as d3 from \"d3\"\nimport draw from './drawLegend'\nimport { selectAll } from 'd3';\nimport \"./legend.css\"\nclass Legend extends Component {\n\n  state = {\n  }\n  componentDidMount() {\n    //draw(this.props);\n    //this.findMax()\n  }\n\n  componentDidUpdate(){\n    \n  }\n  findMax(){\n    const {data, selectedYear} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if( key !==\"year\" &&  maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,150])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  render() {\n\n    let{selectedTopic, selectedMentor, isMentor} = this.props;\n    const data = (isMentor) ? selectedMentor : selectedTopic\n    return(\n      <div className=\"Legend-vis\">\n        {\n          data.map((t)=>{\n            let color ={};\n            color[\"bgcolor\"] = colorScale(t);\n            return (\n              <div class =\"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\" style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}></div>\n                </div>\n                <div class = \"name\">{t}</div>\n             </div>\n          );\n          })\n        }\n      </div>\n    )\n  }\n}\n \nexport default Legend;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawLegend.js",["266","267"],"import colorScale from \"../colorScale\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3\";\nconst draw = (props) => {\n  let { selectedTopic } = props;\n  d3.selectAll(\".Legend-vis > *\").remove();\n  var data_legend = [];\n  console.log(props);\n  for (let t of selectedTopic) {\n    console.log(t);\n    let temp = {};\n    temp[\"name\"] = t;\n    temp[\"color\"] = colorScale(t, \"T\");\n    data_legend.push(temp);\n  }\n  const yScale = d3\n    .scaleBand()\n    .domain(data_legend.map((d) => d.color))\n    .range([0, 500])\n    .padding(0.1);\n\n  console.log(data_legend);\n  var svg = d3\n    .select(\".Legend-vis\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", 200)\n    .attr(\"height\", 200);\n\n  var legend = svg\n    .selectAll(\".legend\")\n    .data(data_legend)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n    .append(\"rect\")\n    .attr(\"width\", \"10px\")\n    .attr(\"height\", \"10px\")\n    .attr(\"x\", \"10px\")\n    .attr(\"y\", (d) => yScale(d.color))\n    .attr(\"fill\", (d) => colorScale(d.name, \"T\"));\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/info.jsx",["268"],"import React, { Component } from 'react';\nimport \"./info.css\"\nclass Info extends Component {\n  state = {  }\n  render() { \n    const {selectedYear, selectedMentor, selectedTopic} = this.props;\n    return ( \n      <div class = \"Info\">\n        <div class = \"yearDisplay\">Year: {selectedYear}</div>\n        {\n          selectedTopic.map((t)=>{\n            return <div class = \"topicDisplay\">{t}</div>\n          })\n        }\n      </div>\n    );\n  }\n}\n \nexport default Info;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/recommend.jsx",["269","270","271"],"import React, { Component } from 'react';\nimport colorScale from '../colorScale';\nimport * as d3 from \"d3\";\nimport \"./recommend.css\"\nimport HiddenBox from \"./HiddenBox\";\nclass Recommend extends Component {\n  state = {\n    id: -1,\n    selected: 0\n    }\n  findMax(){\n    const {data} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if(maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  onClick(id){\n    if(this.state.selected === 1){\n      this.setState({id:-1});\n      this.setState({selected: 0});\n    }\n    else {\n      this.setState({id:id});\n      this.setState({selected: 1});\n    }\n  }\n\n  onHover(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"0.8\";\n  }\n  onLeave(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"1\";\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,400])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  render() {\n    let{data, keys,isMentor, fulldata} = this.props;\n    let domain = [];\n    for(let key in data){\n         domain.push(key);\n    }\n    return( <div className = \"Recommend-vis\">\n      {\n        domain.map((t)=>{\n          return(\n            <div>\n              <div class = \"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                        id = {\"rec\" + domain.indexOf(t)} \n                        onClick={()=>this.onClick(domain.indexOf(t))} \n                        onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                        onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                        style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}\n                  </div>\n                  </div>\n                <div class = \"name\">{t}</div>\n              </div>\n                {<HiddenBox id = {domain.indexOf(t)} chosen = {this.state.id} topic = {t} keys = {keys} fulldata={fulldata}>\n              </HiddenBox> }\n            </div>\n          )\n        })\n      }\n    </div>\n    );\n  }\n    // let{data} = this.props;\n    // let domain = [];\n    // for(let key in data){\n    //   domain.push(key);\n    // }\n    // return( \n    //   <div className=\"Recommend-vis\">\n    // )}\n}\n\nexport default Recommend;\n\n/* {\n          domain.map((t)=>{\n            return (\n              <div>\n              <div class =\"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                       id = {\"rec\" + domain.indexOf(t)} \n                       onClick={()=>this.onClick(domain.indexOf(t))} \n                       onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                       onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                       style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}</div>\n                </div>\n                <div class = \"name\">{t}</div>\n             </div>\n             <div>\n             <HiddenBox id = {\"box\" + domain.indexOf(t)}>\n             </HiddenBox>\n             </div>\n          );\n          })\n        }\n      </div>\n    );\n  } */","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/vis.js",["272","273","274","275","276","277"],"import * as d3 from \"d3\";\nimport colorScale from \"../../colorScale\";\nconst draw = (props) => {\n  d3.selectAll(\".vis-scatter > *\").remove();\n  const { dataV, dataE, selectedTopic } = props;\n  /*\n  const dataV = [\n    { name: \"Apple\", value: 13 },\n    { name: \"Orange\", value: 8 },\n    { name: \"Cake\", value: 34 },\n    { name: \"Peach\", value: 2 },\n    { name: \"Banana\", value: 21 },\n  ];\n  let dataE = [\n    { source: 0, target: 4, value: 1 },\n    { source: 1, target: 3, value: 0.8 },\n    { source: 2, target: 4, value: 0.6 },\n    { source: 4, target: 3, value: 1.3 },\n    { source: 1, target: 4, value: 0.9 },\n    { source: 2, target: 1, value: 1.5 },\n  ];\n*/\n  let keyRange = [];\n  dataV.forEach((d) => {\n    keyRange.push(d.name);\n  });\n\n  const width = 400;\n  const height = 500;\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  let svg = d3\n    .select(\".vis-scatter\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(d3.zoom);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"id\", \"maingroup\")\n    .attr(\"transform\", `translate(${margin.top}, ${margin.right})`);\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.x), d3.max(dataV, (d) => d.x)])\n    .range([0, 900]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.y), d3.max(dataV, (d) => d.y)])\n    .range([0, height - 200]);\n\n  const sizeScale = d3\n    .scaleSqrt()\n    .domain([0, d3.max(dataV, (d) => d.value)])\n    .range([0, 20]);\n\n  //TODO: draw the chart\n  var scaleColor = d3\n    .scaleOrdinal()\n    .domain(d3.range(dataV.length))\n    .range(d3.schemeCategory10);\n\n  var forceSimulation = d3\n    .forceSimulation(dataV)\n    .force(\"link\", d3.forceLink())\n    .force(\"collision\", d3.forceCollide(1).strength(0.1))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter());\n  forceSimulation.nodes(dataV).on(\"tick\", () => {\n    links\n      .attr(\"x1\", function (d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function (d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function (d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    gs &&\n      gs.attr(\"transform\", function (d, i) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n  });\n  forceSimulation\n    .force(\"link\")\n    .links(dataE)\n    .distance(function (d, i) {\n      return d.value * 100; //设置边长\n    });\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2) //设置x坐标\n    .y(height / 2); //设置y坐标\n\n  var links = g\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(dataE)\n    .enter()\n    .append(\"line\")\n    .attr(\"stroke\", function (d, i) {\n      return colorScale(d.name, \"T\"); //设置边线颜色\n    })\n    .attr(\"stroke-width\", \"5\"); //设置边线宽度\n\n  var linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(dataE)\n    .enter()\n    .append(\"text\")\n    .text(function (d, i) {\n      return d.name;\n    });\n  //创建节点分组\n  var gs = g\n    .selectAll(\".circle\")\n    .data(dataV)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    })\n    .call(\n      d3\n        .drag() //相当于移动端的拖拽手势  分以下三个阶段\n        .on(\"start\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0.8).restart();\n          }\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n\n        .on(\"drag\", drag)\n        .on(\"end\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0);\n          }\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n\n  //绘制节点\n  let circles = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => sizeScale(d.value))\n    .attr(\"opacity\", 0.7)\n    .attr(\"stroke\", \"none\")\n    .attr(\"fill\", function (d, i) {\n      return colorScale(d.name, \"T\");\n    })\n    .on(\"click\", function (d) {\n      console.log(d3.select(this).text());\n    })\n    .on(\"mouseover\", function (d) {\n      d3.select(this)\n        .attr(\"opacity\", 0.5)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 6);\n    })\n    .on(\"mouseout\", function (d) {\n      d3.select(this).attr(\"opacity\", 0.7).attr(\"stroke\", \"none\");\n    })\n    .append(\"title\")\n    .text(\n      (d) => d.name //+ \": \" + format(\",\")(d[`${caseType}`])\n    );\n\n  gs.append(\"title\").text(function (d, i) {\n    return d.name;\n  });\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", (event, d) => {\n      let k = (event.transform.k - 1) * 0.1 + 1;\n      g.attr(\n        \"transform\",\n        \"translate(\" +\n          event.transform.x / 5 +\n          \",\" +\n          event.transform.y / 5 +\n          \") scale(\" +\n          k +\n          \")\"\n      );\n    });\n  //svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity);\n};\n\nfunction drag(event, d) {\n  d.fx = event.x;\n  d.fy = event.y;\n}\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/HiddenBox.js",["278"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/graphWeight.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/cloud.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawCloud.js",["279","280"],"import * as d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport data from \"../data/cloud\";\nimport allTopic from \"../data/allTopic\";\nconst draw = (props) => {\n  d3.selectAll(\".cloud-vis > *\").remove();\n  const { selectedTopic, selectedMentor, isMentor } = props;\n  var frequency_list = [];\n  if (!isMentor)\n    data[selectedTopic[0]].forEach((e, i) => {\n      frequency_list.push({ text: e, size: Math.log(i) * 30 });\n    });\n  // var frequency_list = [\n  //   { text: \"互联网\", size: 50 },\n  //   { text: \"有限元\", size: 20 },\n  //   { text: \"复合材料\", size: 40 },\n  //   { text: \"传感器\", size: 30 },\n  //   { text: \"swot\", size: 19 },\n  //   { text: \"神经网络\", size: 80 },\n  //   { text: \"人满为患\", size: 50 },\n  //   { text: \"动力学\", size: 70 },\n  //   { text: \"机器人\", size: 80 },\n  // ];\n  /*\n神经网络\n动力学\n机器人\n互联网\n复合材料\n传感器\nswot\n有限元\n\n*/\n  //自定义一个线性非连贯比例尺来进行给不同大小的词赋颜色.\n  //   var color = d3.scale.linear()\n  //            .domain([0,1,2,3,4,5,6,10,15,20,100])\n  //            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n  var color = d3\n    .scaleOrdinal()\n    .domain(d3.range(frequency_list.length))\n    .range(d3.schemeCategory10);\n\n  var layout = cloud()\n    .size([750, 600])\n    .words(frequency_list)\n    .rotate(0)\n    .fontSize(function (d) {\n      return d.size;\n    })\n    .on(\"end\", paint);\n\n  layout.start();\n\n  function paint(words) {\n    d3.select(\".cloud-vis\")\n      .append(\"svg\") //根据id插入svg\n      .attr(\"width\", layout.size()[0]) //宽度\n      .attr(\"height\", layout.size()[1]) //高度\n      .attr(\"viewBox\", \"0 0 600 350\") //可见区域\n      .attr(\"preserveAspectRatio\", \"xMaxYMax meet\")\n      .attr(\"class\", \"wordcloud\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(200,100)\")\n      .selectAll(\"text\")\n      .data(words)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", function (d) {\n        return d.size + \"px\";\n      })\n      .style(\"fill\", function (d, i) {\n        return color(i);\n      }) //颜色\n      .attr(\"transform\", function (d) {\n        //每个词条的偏移量\n        return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      })\n      .text(function (d) {\n        return d.text;\n      }); //内容\n  }\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic2.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/detailedKey.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/cloud.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/index.js",[],["281","282"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/App.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/graphWeight.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/detailedKey.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/navbar.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/search.jsx",["283","284"],"import { Divider } from 'antd';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport \"./search.css\"\nclass Search extends Component {\n  state = {  }\n  componentDidMount(){\n  }\n\n  onClick(){\n    let{onChangeTopic, onChangeMentor, isMentor} = this.props;\n    var datalist = document.querySelector(\"#exampleDataList\");\n    if(!isMentor) onChangeTopic(datalist.value);\n    else onChangeMentor(datalist.value)\n    console.log(datalist.value)\n  }\n  render() { \n    //console.log(this.props);\n    const{isMentor} = this.props;\n    //const isMentor = this.props.match.path === \"/Mentor\";\n    if(!isMentor)\n    return (<div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"搜索学院\"/>\n      <datalist id=\"datalistOptions\">\n        <option value = \"全选\"></option>\n        <option value=\"安泰经济与管理学院\"/>\n        <option value=\"化学化工学院\"/>\n        <option value=\"药学院\"/>\n        <option value=\"船舶海洋与建筑工程学院\"/>\n        <option value=\"生命科学技术学院\"/>\n        <option value=\"农业与生物学院\"/>\n        <option value=\"物理与天文学院\"/>\n        <option value=\"电子信息与电气工程学院(计算机系)\"/>\n        <option value=\"电子信息与电气工程学院(电气系) Angeles\"/>\n        <option value=\"凯原法学院\"/>\n        <option value=\"电子信息与电气工程学院(电子系)\"/>\n        <option value=\"环境科学与工程学院\"/>\n        <option value=\"塑料成型技术与装备研究院\"/>\n        <option value=\"生物医学工程学院\"/>\n        <option value=\"马克思主义学院\"/>\n        <option value=\"高等教育研究院\"/>\n        <option value=\"国际与公共事务学院\"/>\n        <option value=\"数学科学学院\"/>\n        <option value=\"南加州大学文化创意产业学院\"/>\n        <option value=\"外国语学院\"/>\n        <option value=\"中美物流研究院\"/>\n        <option value=\"设计学院\"/>\n        <option value=\"人文学院\"/>\n        <option value=\"媒体与传播学院\"/>\n        <option value=\"电子信息与电气工程学院(微纳电子系)\"/>\n        <option value=\"电子信息与电气工程学院(微电子学院)\"/>\n        <option value=\"材料科学与工程学院\"/>\n        <option value=\"电子信息与电气工程学院(网络空间安全学院)\"/>\n        <option value=\"电子信息与电气工程学院(软件学院)\"/>\n        <option value=\"系统生物医学研究院\"/>\n        <option value=\"电子信息与电气工程学院(自动化系)\"/>\n        <option value=\"电子信息与电气工程学院\"/>\n        <option value=\"上海交大-巴黎高科卓越工程师学院\"/>\n        <option value=\"电子信息与电气工程学院(仪器系)\"/>\n        <option value=\"航空航天学院\"/>\n        <option value=\"上海交大密西根学院\"/>\n        <option value=\"人文艺术研究院\"/>\n        <option value=\"微纳科学技术研究院\"/>\n        <option value=\"科学史与科学文化研究院\"/>\n        <option value=\"国际教育学院\"/>\n      </datalist>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>);\n    else return(\n      <div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>\n    )\n  }\n}\n \nexport default Search;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/recommend.jsx",["285","286","287"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/info.jsx",["288","289"],"import React, { Component } from 'react';\nimport \"./info.css\"\nclass Info extends Component {\n  state = {  }\n  render() { \n    const {selectedYear, selectedMentor, selectedTopic} = this.props;\n    return ( \n      <div class = \"Info\">\n        <div class = \"yearDisplay\">Year: {selectedYear}</div>\n        \n      </div>\n    );\n  }\n}\n \nexport default Info;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/legend.jsx",["290","291","292","293"],"import React, { Component } from 'react';\n//import colorScale from '../colorScale';\nimport * as d3 from \"d3\"\nimport draw from './drawLegend'\nimport { selectAll } from 'd3';\nimport \"./legend.css\"\nimport Axios from \"axios\";\nclass Legend extends Component {\n\n  state = {\n  }\n  componentDidMount() {\n    //draw(this.props);\n    //this.findMax()\n  }\n\n  componentDidUpdate(){\n    \n  }\n  findMax(){\n    const {data, selectedYear} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if( key !==\"year\" &&  maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,300])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  Hover(t){\n    document.querySelector(\"#\"+t).style.opacity = 0.5\n  }\n  Leave(t){\n    console.log(\"Leave\")\n    document.querySelector(\"#\"+t).style.opacity = 1\n    console.log(document.querySelector(\"#\"+t))\n    console.log(\"opacity set to 1\")\n  }\n  Click(keyw){\n    Axios.get(\"http://localhost:3001/getLegend\", {\n      params: { keyw: keyw, year: this.props.selectedYear, topic:this.props.selectedTopic },\n    }).then((response) => {\n      const data = response.data;\n      console.log(response)\n      let arr = \"当前学院：\" + this.props.selectedTopic + \"\\n当前关键词：\" + keyw + \"\\n\\n\";\n      for(let d of data){\n        console.log(d)\n        arr += d[\"title\"];\n        arr += \"指导老师：\"+d[\"mentor\"];\n        arr +='\\n';\n      }\n      alert(arr);\n    });\n    \n  }\n  render() {\n    let{data} = this.props;\n    let list = []\n    for(let k in data){\n      if(k != \"year\" & data[k]>0) list.push(k)\n    }\n    var colorScale = d3\n    .scaleOrdinal()\n    .domain(list) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n    return(\n      <div className=\"Legend-vis\">\n        {\n          list.map((t)=>{\n            let color ={};\n            color[\"bgcolor\"] = colorScale(t);\n            return (\n              <div class =\"row\">\n                <div class = \"colorbox\" id = {t} onClick={()=>this.Click(t) } onMouseEnter={()=>this.Hover(t)} onMouseLeave = {()=>this.Leave(t)}>\n                  <div class = \"color\" style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}></div>\n                </div>\n                <div class = \"name\">{t}{'('+data[t]+')'}</div>\n             </div>\n          );\n          })\n        }\n      </div>\n    )\n  }\n}\n \nexport default Legend;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/cloud.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawCloud.js",["294","295","296","297"],"import * as d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport data from \"../data/cloud\";\nimport allTopic from \"../data/allTopic\";\nconst draw = (props) => {\n  d3.selectAll(\".cloud-vis > *\").remove();\n  const { selectedTopic, selectedMentor, isMentor } = props;\n  var frequency_list = [];\n  if (!isMentor)\n    data[selectedTopic[0]].forEach((e, i) => {\n      frequency_list.push({ text: e, size: Math.log(i) * 30 });\n    });\n  // var frequency_list = [\n  //   { text: \"互联网\", size: 50 },\n  //   { text: \"有限元\", size: 20 },\n  //   { text: \"复合材料\", size: 40 },\n  //   { text: \"传感器\", size: 30 },\n  //   { text: \"swot\", size: 19 },\n  //   { text: \"神经网络\", size: 80 },\n  //   { text: \"人满为患\", size: 50 },\n  //   { text: \"动力学\", size: 70 },\n  //   { text: \"机器人\", size: 80 },\n  // ];\n  /*\n神经网络\n动力学\n机器人\n互联网\n复合材料\n传感器\nswot\n有限元\n\n*/\n  //自定义一个线性非连贯比例尺来进行给不同大小的词赋颜色.\n  //   var color = d3.scale.linear()\n  //            .domain([0,1,2,3,4,5,6,10,15,20,100])\n  //            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n  var color = d3\n    .scaleOrdinal()\n    .domain(d3.range(frequency_list.length))\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  var layout = cloud()\n    .size([900, 300])\n    .words(frequency_list)\n    .rotate(0)\n    .fontSize(function (d) {\n      return d.size;\n    })\n    .on(\"end\", paint);\n\n  layout.start();\n\n  function paint(words) {\n    const svg = d3\n      .select(\".cloud-vis\")\n      .append(\"svg\") //根据id插入svg\n      .attr(\"width\", layout.size()[0]) //宽度\n      .attr(\"height\", layout.size()[1]) //高度\n      //.attr(\"viewBox\", \"0 0 900 300\") //可见区域\n      .attr(\"preserveAspectRatio\", \"xMaxYMax meet\")\n      .attr(\"class\", \"wordcloud\");\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(400,150)\")\n      .selectAll(\"text\")\n      .data(words)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", function (d) {\n        return d.size + \"px\";\n      })\n      .style(\"fill\", function (d, i) {\n        return color(i);\n      }) //颜色\n      .attr(\"transform\", function (d) {\n        //每个词条的偏移量\n        return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      })\n      .on(\"mouseover\", function (event, i) {\n        d3.select(\".cloud-vis\")\n          .selectAll(\"text\")\n          .style(\"font-size\", (d) => {\n            if (i.text == d.text) return d.size * 1.1 + \"px\";\n            else return d.size + \"px\";\n          });\n      })\n      .on(\"mouseleave\", function (event, i) {\n        d3.select(\".cloud-vis\")\n          .selectAll(\"text\")\n          .style(\"font-size\", (d) => {\n            return d.size + \"px\";\n          });\n      })\n      .text(function (d) {\n        return d.text;\n      });\n  }\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/vis.js",["298","299","300","301","302","303","304"],"import * as d3 from \"d3\";\nimport _, { floor } from \"lodash\";\n//import colorScale from \"../../colorScale\";\nimport \"./style.css\";\nimport allTopic from \"../../data/allTopic\";\n\nconst draw = ({\n  data,\n  width,\n  height,\n  isMentor,\n  onChangeMentor,\n  selectedYear,\n  onChangeYear,\n  onChangeTopic,\n}) => {\n  // data = [\n  //   { year: \"2015\", Apple: 15, Orange: 10, Cake: 30, Banana: 20, Peach: 20 },\n  //   { year: \"2016\", Apple: 16, Orange: 7, Cake: 35, Banana: 14, Peach: 10 },\n  //   { year: \"2017\", Apple: 19, Orange: 6, Cake: 40, Banana: 9, Peach: 22 },\n  //   { year: \"2018\", Apple: 10, Orange: 9, Cake: 20, Banana: 5, Peach: 20 },\n  //   { year: \"2019\", Apple: 13, Orange: 8, Cake: 34, Banana: 2, Peach: 21 },\n  // ];\n\n  // console.log(data);\n  let dataPie = [];\n  let count = 0;\n  let yearData = d3.extent(data, function (d) {\n    return parseInt(d.year);\n  }); // how many years covered\n  let maxNum = 0; // max number of the sum of all themes in each years\n  let domain = []; // domain of all the themes\n  // console.log(yearData);\n  const yearLB = yearData[0];\n  // get the data for pie chart\n  data.forEach((d) => {\n    if (d.year === selectedYear) yearData = d;\n  });\n  /*\n  for (var key in yearData) {\n    if (key != \"year\") {\n      let temp = {};\n      temp[\"count\"] = yearData[key]; // convert the data format to\n      temp[\"label\"] = key;\n      dataPie.push(temp);\n    }\n  }\n*/\n  // data.forEach((d)=>{\n\n  // })\n  data.forEach((d) => {\n    var sum = 0;\n    for (var key in d) {\n      if (key != \"year\" && domain.indexOf(key) < 0) domain.push(key);\n      if (key != \"year\") sum += d[key];\n    }\n    if (maxNum < sum) maxNum = sum;\n  });\n  // console.log(domain);\n  d3.selectAll(\".vis-themeRiver > *\").remove();\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  var svg = d3\n    .select(\".vis-themeRiver\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .attr(\"id\", \"themeVis\");\n  var stackGen = d3.stack().keys(domain).order(d3.stackOrderNone);\n  //.offset(d3.stackOffsetWiggle);\n  var stackedSeries = stackGen(data);\n\n  const Riverscale = 1;\n  // Add X axis --> it is a date format\n  let xScale = d3\n    .scaleLinear()\n    .domain(\n      d3.extent(data, function (d) {\n        return parseInt(d.year);\n      })\n    )\n    .range([0, width / Riverscale]);\n\n  //Add X axis\n  const xAxis = d3.axisBottom(xScale).ticks(data.length - 1, \".4\"); //.tickFormat(format(\".4\"));\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"id\", \"horizontalAxis\")\n    .call(xAxis)\n    .select(\".domain\")\n    .remove();\n\n  // Add Y axis\n  var yScale = d3\n    .scaleLinear()\n    .domain([0, maxNum])\n    .range([height - 20, 0]);\n  svg.append(\"g\").call(d3.axisLeft(yScale));\n\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(domain) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  var areaGen = d3\n    .area()\n    .curve(d3.curveBasis)\n    .x((d) => xScale(d.data.year))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  d3.select(\"#themeVis\")\n    .selectAll(\".areas\")\n    .data(stackedSeries)\n    .join(\"path\")\n    .attr(\"d\", areaGen)\n    .attr(\"fill\", (d) => colorScale(d.key, \"T\"))\n    .attr(\"class\", \"theme\");\n\n  //change font size of the axis\n  d3.selectAll(\"#themeVis .tick>text\").each(function (d, i) {\n    d3.select(this).style(\"font-size\", \"14px\");\n  });\n  var tooltip = d3\n    .select(\".theme\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .html(\n      \"<p>I'm a tooltip written in HTML</p><img src='https://github.com/holtzy/D3-graph-gallery/blob/master/img/section/ArcSmal.png?raw=true'></img><br>Fancy<br><span style='font-size: 40px;'>Isn't it?</span>\"\n    );\n\n  d3.selectAll(\".theme\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function (event, i) {\n      d3.selectAll(\".theme\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.key) return 1;\n        return 0.8;\n      });\n\n      tooltip.style(\"opacity\", 0.9);\n\n      // d3.selectAll(\".pie\").attr(\"opacity\", (d, j) => {\n      //   if (i.key === d.data.label) return 1;\n      //   return 0.8;\n      // });\n    })\n    .append(\"title\")\n    .text((d) => d.key);\n\n  // .on(\"click\", function (event, i) {\n  //   alert(i.key);\n  // });\n\n  var vertical = d3\n    .select(\".vis-themeRiver\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"19\")\n    .style(\"bottom\", \"0px\")\n    .style(\"left\", \"0px\")\n    .style(\"width\", \"1px\")\n    .style(\"height\", height + margin.top + \"px\")\n    .style(\"background\", \"#fff\");\n  d3.select(\".vis-themeRiver\")\n    .on(\"mousemove\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"mouseover\", function (event) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"click\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] - margin.left;\n      const padding = (width / Riverscale - margin.left) / (data.length - 1);\n      const target = parseInt(mousex / padding) + yearLB;\n      onChangeYear(target);\n    });\n\n  /*\n  let radius = Math.min(width, height) / 2;\n\n  let arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  let pie = d3\n    .pie()\n    .value(function (d) {\n      return d.count;\n    })\n    .sort(null);\n  svg\n    .selectAll(\"pie\")\n    .data(pie(dataPie))\n    .enter()\n    .append(\"path\")\n    .attr(\"transform\", \"translate(1000,\" + radius + \")\")\n    .attr(\"d\", arc)\n    .attr(\"class\", \"pie\")\n    .attr(\"fill\", function (d) {\n      return colorScale(d.data.label);\n    });\n    */\n};\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/vis.js",["305","306","307","308","309","310"],"import * as d3 from \"d3\";\nimport colorScale from \"../../colorScale\";\nconst draw = (props) => {\n  d3.selectAll(\".vis-scatter > *\").remove();\n  const { dataV, dataE, selectedTopic } = props;\n  /*\n  const dataV = [\n    { name: \"Apple\", value: 13 },\n    { name: \"Orange\", value: 8 },\n    { name: \"Cake\", value: 34 },\n    { name: \"Peach\", value: 2 },\n    { name: \"Banana\", value: 21 },\n  ];\n  let dataE = [\n    { source: 0, target: 4, value: 1 },\n    { source: 1, target: 3, value: 0.8 },\n    { source: 2, target: 4, value: 0.6 },\n    { source: 4, target: 3, value: 1.3 },\n    { source: 1, target: 4, value: 0.9 },\n    { source: 2, target: 1, value: 1.5 },\n  ];\n*/\n  let keyRange = [];\n  dataV.forEach((d) => {\n    keyRange.push(d.name);\n  });\n\n  const width = 400;\n  const height = 270;\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  let svg = d3\n    .select(\".vis-scatter\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(d3.zoom);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"id\", \"maingroup\")\n    .attr(\"transform\", `translate(${margin.top}, ${margin.right})`);\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.x), d3.max(dataV, (d) => d.x)])\n    .range([0, 900]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.y), d3.max(dataV, (d) => d.y)])\n    .range([0, height - 200]);\n\n  const sizeScale = d3\n    .scaleSqrt()\n    .domain([0, d3.max(dataV, (d) => d.value)])\n    .range([0, 20]);\n\n  //TODO: draw the chart\n  var scaleColor = d3\n    .scaleOrdinal()\n    .domain(d3.range(dataV.length))\n    .range(d3.schemeCategory10);\n\n  var forceSimulation = d3\n    .forceSimulation(dataV)\n    .force(\"link\", d3.forceLink())\n    .force(\"collision\", d3.forceCollide(1).strength(0.1))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter());\n  forceSimulation.nodes(dataV).on(\"tick\", () => {\n    links\n      .attr(\"x1\", function (d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function (d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function (d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    gs &&\n      gs.attr(\"transform\", function (d, i) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n  });\n  forceSimulation\n    .force(\"link\")\n    .links(dataE)\n    .distance(function (d, i) {\n      return d.value * 100; //设置边长\n    });\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2) //设置x坐标\n    .y(height / 2); //设置y坐标\n\n  var links = g\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(dataE)\n    .enter()\n    .append(\"line\")\n    .attr(\"stroke\", function (d, i) {\n      return colorScale(d.name, \"T\"); //设置边线颜色\n    })\n    .attr(\"stroke-width\", \"5\"); //设置边线宽度\n\n  var linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(dataE)\n    .enter()\n    .append(\"text\")\n    .text(function (d, i) {\n      return d.name;\n    });\n  //创建节点分组\n  var gs = g\n    .selectAll(\".circle\")\n    .data(dataV)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    })\n    .call(\n      d3\n        .drag() //相当于移动端的拖拽手势  分以下三个阶段\n        .on(\"start\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0.8).restart();\n          }\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n\n        .on(\"drag\", drag)\n        .on(\"end\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0);\n          }\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n\n  //绘制节点\n  let circles = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => sizeScale(d.value))\n    .attr(\"opacity\", 0.7)\n    .attr(\"stroke\", \"none\")\n    .attr(\"fill\", function (d, i) {\n      return colorScale(d.name, \"T\");\n    })\n    .on(\"click\", function (d) {\n      console.log(d3.select(this).text());\n    })\n    .on(\"mouseover\", function (d) {\n      d3.select(this)\n        .attr(\"opacity\", 0.5)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 6);\n    })\n    .on(\"mouseout\", function (d) {\n      d3.select(this).attr(\"opacity\", 0.7).attr(\"stroke\", \"none\");\n    })\n    .append(\"title\")\n    .text(\n      (d) => d.name //+ \": \" + format(\",\")(d[`${caseType}`])\n    );\n\n  gs.append(\"title\").text(function (d, i) {\n    return d.name;\n  });\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", (event, d) => {\n      let k = (event.transform.k - 1) * 0.1 + 1;\n      g.attr(\n        \"transform\",\n        \"translate(\" +\n          event.transform.x / 5 +\n          \",\" +\n          event.transform.y / 5 +\n          \") scale(\" +\n          k +\n          \")\"\n      );\n    });\n  //svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity);\n};\n\nfunction drag(event, d) {\n  d.fx = event.x;\n  d.fy = event.y;\n}\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/colorScale.js",["311"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawLegend.js",["312","313"],"//import colorScale from \"../colorScale\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3\";\nconst draw = (props) => {\n  let { keyw } = props;\n  d3.selectAll(\".Legend-vis > *\").remove();\n  var data_legend = [];\n  console.log(props);\n  for (let k in keyw) {\n    let temp = {};\n    temp[\"name\"] = k;\n    temp[\"value\"] = keyw[k];\n    data_legend.push(temp);\n  }\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(data_legend.map((d) => d.name)) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  const yScale = d3\n    .scaleBand()\n    .domain(data_legend.map((d) => d.color))\n    .range([0, 500])\n    .padding(0.1);\n\n  console.log(data_legend);\n  var svg = d3\n    .select(\".Legend-vis\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", 200)\n    .attr(\"height\", 200);\n\n  var legend = svg\n    .selectAll(\".legend\")\n    .data(data_legend)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n    .append(\"rect\")\n    .attr(\"width\", (d) => d.value)\n    .attr(\"height\", \"10px\")\n    .attr(\"x\", \"10px\")\n    .attr(\"y\", (d) => yScale(d.color))\n    .attr(\"fill\", (d) => colorScale(d.name, \"T\"));\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/HiddenBox.js",["314"],"import React, { Component } from \"react\";\nimport \"./HiddenBox.css\";\nimport { forEach } from \"lodash\";\nclass HiddenBox extends Component {\n  click(k, topic) {\n    //alert(topic);\n    const { fulldata } = this.props;\n    let arr = \"当前学院：\" + topic + \"\\n当前关键词：\" + k + \"\\n\\n\";\n\n    fulldata.forEach((d) => {\n      if (d[\"school\"] === topic && d[\"keyword\"].indexOf(k) > -1) {\n        arr += d[\"title\"] + \"\\n\";\n      }\n    });\n    alert(arr);\n  }\n\n  render() {\n    let show = \"none\";\n    const { keys, topic } = this.props;\n    //console.log(keys[topic]);\n    if (this.props.chosen === this.props.id) show = \"block\";\n    return (\n      <div class=\"hidden\" style={{ display: show }}>\n        {/* <span class=\"badge bg-primary\">Keyword</span> */}\n        <ul class=\"list\">\n          {keys[topic].map((k) => {\n            return (\n              <li class=\"item\" key={k} onClick={() => this.click(k, topic)}>\n                {k}\n              </li>\n            );\n          })}\n          {/* <li class=\"item\">动力学</li>\n          <li class=\"item\">有限元</li>\n          <li class=\"item\">复合材料</li>\n          <li class=\"item\">汽轮机</li> */}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default HiddenBox;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/cloud.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic2.js",[],["315","316"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardT.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { Component } from \"react\";\nimport { select, csv, map } from \"d3\";\nimport { Layout } from \"antd\";\nimport Axios from \"axios\";\nimport \"./dashboardT.css\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\n\nimport Year from \"./components/year\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class DashboardT extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"董笑菊\"],\n    selectedTopic: allTopic,\n    selectedYear: \"2018\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n  };\n  changeYearHandle = (target) => {\n    this.setState({ selectedYear: target.toString() });\n    Axios.post(\"http://localhost:3001/changeYear\", {\n      selectedYear: this.state.selectedYear,\n    }).then(() => {\n      // alert(\"success\");\n    });\n    Axios.get(\"http://localhost:3001/getYear\", {\n      params: { year: this.state.selectedYear },\n    }).then((response) => {\n      console.log(response);\n    });\n    this.updateLegend();\n    //this.updateGraph();\n  };\n  changeTopicHandle = (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else this.setState({ selectedTopic: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  changeMentorHandle = (target) => {\n    this.setState({ selectedMentor: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  async updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    let key = isMentor ? \"mentor\" : \"school\";\n    let yearRange = [\"2019\", \"2018\"];\n    let newDataTheme = [{ year: 2019 }, { year: 2018 }];\n    let list = [];\n    for (let year of yearRange) {\n      const response = await Axios.get(\"http://localhost:3001/getTheme\", {\n        params: {\n          year: year,\n          topic: this.state.selectedTopic[0],\n        },\n      });\n      let data = response.data;\n      for (let i = 0; i < 8; i++) {\n        //console.log(data[i]);\n        if (list.indexOf(data[i].keyw) == -1) list.push(data[i].keyw);\n      }\n      for (let i = 0; i < 8; i++)\n        newDataTheme[this.getYearIndex(year)][data[i].keyw] = data[i].num;\n    }\n    for (let year of yearRange) {\n      for (let item of list) {\n        if (!newDataTheme[this.getYearIndex(year)].hasOwnProperty(item))\n          newDataTheme[this.getYearIndex(year)][item] = 0;\n      }\n    }\n    this.setState({ dataTheme: newDataTheme });\n    /*\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    */\n\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  updateGraph() {\n    const isMentor = this.props.match.path === \"/Mentor\";\n    const {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      Keys,\n    } = this.state;\n    let edgeSet = [],\n      verticeSet = [];\n    let recomSet = {};\n\n    const target = selectedTopic[0];\n    const index = allTopic.indexOf(target); //TODO\n    let count = 1;\n    verticeSet.push({\n      name: target,\n      value: 10,\n    });\n\n    let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n      return weight[index][b] - weight[index][a];\n    });\n    for (let i = 0; i < 8; i++) {\n      recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n    }\n    this.setState({ dataRecom: recomSet });\n    const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n    this.setState({\n      dataRecomKey: temp,\n    });\n    for (let key in weight[index]) {\n      if (weight[index][key] > 0) {\n        verticeSet.push({\n          name: key,\n          value: 3,\n        });\n        edgeSet.push({\n          source: 0,\n          target: count,\n          value: Math.sqrt(2 / weight[index][key]),\n        });\n        count++;\n      }\n    }\n    this.setState({ dataV: verticeSet });\n    this.setState({ dataE: edgeSet });\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataV,\n      dataE,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n    } = this.state;\n\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <header>\n          <h1>交通大学论文系统</h1>\n          <div class=\"showTime\"></div>\n        </header>\n        <section>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel profile\">\n                <div class=\"boxhead\">查询 Search</div>\n                <Search\n                  onChangeTopic={this.changeTopicHandle}\n                  onChangeMentor={this.changeMentorHandle}\n                  isMentor={isMentor}\n                />\n                <Year onChangeYear={this.changeYearHandle} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel themeriver\">\n                <div class=\"boxhead\">Cloud</div>\n                <Cloud selectedTopic={selectedTopic} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel info\">\n                <div class=\"boxhead\">热点 Hot topics</div>\n\n                <Info\n                  selectedYear={selectedYear}\n                  selectedMentor={selectedMentor}\n                  selectedTopic={selectedTopic}\n                />\n\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">Keyword Barchart</div>\n                <Legend\n                  selectedTopic={selectedTopic[0]}\n                  selectedMentor={selectedMentor}\n                  data={dataLegend}\n                  selectedYear={selectedYear}\n                  isMentor={isMentor}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel graph\">\n                <div class=\"boxhead\">Keyword Themeriver</div>\n                <ThemeRiver\n                  data={dataTheme}\n                  width={1150}\n                  height={500}\n                  isMentor={isMentor}\n                  selectedYear={selectedYear}\n                  onChangeMentor={this.changeMentorHandle}\n                  onChangeYear={this.changeYearHandle}\n                  onChangeTopic={this.changeTopicHandle}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardR.js",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { Component } from \"react\";\nimport { select, csv, map } from \"d3\";\nimport { Layout } from \"antd\";\nimport Axios from \"axios\";\nimport \"./dashboardR.css\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\nimport Line from \"./charts/Line/index\";\nimport Map from \"./charts/Map/index\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class DashboardR extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"董笑菊\"],\n    selectedTopic: allTopic,\n    selectedYear: \"2019\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n  };\n  changeYearHandle = (target) => {\n    this.setState({ selectedYear: target.toString() });\n    Axios.post(\"http://localhost:3001/changeYear\", {\n      selectedYear: this.state.selectedYear,\n    }).then(() => {\n      alert(\"success\");\n    });\n    Axios.get(\"http://localhost:3001/getYear\", {\n      params: { year: this.state.selectedYear },\n    }).then((response) => {\n      console.log(response);\n    });\n    //this.updateLegend();\n    //this.updateGraph();\n  };\n  changeTopicHandle = (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else this.setState({ selectedTopic: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  changeMentorHandle = (target) => {\n    this.setState({ selectedMentor: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  async updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    let key = isMentor ? \"mentor\" : \"school\";\n    let yearRange = [\"2019\", \"2018\"];\n    let newDataTheme = [{ year: 2019 }, { year: 2018 }];\n    let list = [];\n    for (let year of yearRange) {\n      const response = await Axios.get(\"http://localhost:3001/getTheme\", {\n        params: {\n          year: year,\n          topic: this.state.selectedTopic[0],\n        },\n      });\n      let data = response.data;\n      for (let i = 0; i < 8; i++) {\n        //console.log(data[i]);\n        if (list.indexOf(data[i].keyw) == -1) list.push(data[i].keyw);\n      }\n      for (let i = 0; i < 8; i++)\n        newDataTheme[this.getYearIndex(year)][data[i].keyw] = data[i].num;\n    }\n    for (let year of yearRange) {\n      for (let item of list) {\n        if (!newDataTheme[this.getYearIndex(year)].hasOwnProperty(item))\n          newDataTheme[this.getYearIndex(year)][item] = 0;\n      }\n    }\n    this.setState({ dataTheme: newDataTheme });\n    /*\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    */\n\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  updateGraph() {\n    const isMentor = this.props.match.path === \"/Mentor\";\n    const {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      Keys,\n    } = this.state;\n    let edgeSet = [],\n      verticeSet = [];\n    let recomSet = {};\n\n    const target = selectedTopic[0];\n    const index = allTopic.indexOf(target); //TODO\n    let count = 1;\n    verticeSet.push({\n      name: target,\n      value: 10,\n    });\n\n    let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n      return weight[index][b] - weight[index][a];\n    });\n    for (let i = 0; i < 8; i++) {\n      recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n    }\n    this.setState({ dataRecom: recomSet });\n    const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n    this.setState({\n      dataRecomKey: temp,\n    });\n    for (let key in weight[index]) {\n      if (weight[index][key] > 0) {\n        verticeSet.push({\n          name: key,\n          value: 3,\n        });\n        edgeSet.push({\n          source: 0,\n          target: count,\n          value: Math.sqrt(2 / weight[index][key]),\n        });\n        count++;\n      }\n    }\n    this.setState({ dataV: verticeSet });\n    this.setState({ dataE: edgeSet });\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataV,\n      dataE,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n    } = this.state;\n\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <header>\n          <h1>交通大学论文系统</h1>\n          <div class=\"showTime\"></div>\n        </header>\n        <section class=\"relationView\">\n          <div class=\"section1\">\n            <div class=\"mainbox\">\n              <div class=\"column\">\n                <div class=\"panel profile\">\n                  <div class=\"boxhead\">查询 Search</div>\n                  <Search\n                    onChangeTopic={this.changeTopicHandle}\n                    onChangeMentor={this.changeMentorHandle}\n                    isMentor={isMentor}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n\n              <div class=\"column\">\n                <div class=\"panel info\">\n                  <div class=\"boxhead\">热点 Hot topics</div>\n                  {/* <Info\n                  selectedYear={selectedYear}\n                  selectedMentor={selectedMentor}\n                  selectedTopic={selectedTopic}\n                /> */}\n                  <Scatter\n                    dataV={dataV}\n                    dataE={dataE}\n                    selectedTopic={selectedTopic}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mainbox\">\n              <div class=\"column\">\n                <div class=\"panel recommend\">\n                  <div class=\"boxhead\">Recommendation</div>\n                  <Recommend\n                    data={dataRecom}\n                    keys={dataRecomKey}\n                    fulldata={data}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"section2\">\n            <div class=\"mainbox\">\n              <div class=\"column\">\n                <div class=\"panel graph\">\n                  <div class=\"boxhead\">Hot Topic</div>\n                  <Map />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/vis.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/year.jsx",["371"],"import React, { Component } from 'react';\nimport \"./year.css\"\nclass Year extends Component {\n  state = {  }\n  Select(){\n    var obj = document.getElementById(\"year\"); //定位id\n    var index = obj.selectedIndex; // 选中索引\n    var text = obj.options[index].text; // 选中文本\n    var value = obj.options[index].value; // 选中值\n    this.props.onChangeYear(value)\n  }\n  render() {\n    let yearRange = [\"2018\", \"2019\"] \n    return ( \n      <select class=\"form-select\" aria-label=\"Default select example\" id = \"year\"  onChange = {()=>this.Select()}>\n\n        {\n          yearRange.map((year)=>{\n            return <option value={year}>{year}</option>\n          })\n        }\n      </select>\n     );\n  }\n}\n \nexport default Year;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/vis.js",["372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import * as d3 from \"d3\";\n// import colorScale from \"../../colorScale\";\n\nconst draw = () => {\n  const edgeColor = \"#999\";\n  const colorScale = {\n    安泰经济与管理学院: \"#e8d4d4\",\n    化学化工学院: \"#F7B5A2\",\n    机械动力与工程学院: \"#B9E4DD\",\n  };\n  const circleColor = \"#e8d4d4\";\n  const circleWordColor = \"#111\";\n  let margin = { top: 10, bottom: 10, left: 10, right: 10 };\n  let width = 1200 - margin.left - margin.right;\n  let height = 890 - margin.top - margin.bottom;\n  d3.selectAll(\".vis-map > *\").remove();\n  let svg = d3\n    .select(\".vis-map\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg\n    .call(\n      d3.zoom().on(\"zoom\", function (event) {\n        g.attr(\"transform\", event.transform);\n      })\n    )\n    .on(\"dblclick.zoom\", null);\n  let g = svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.top + \",\" + margin.left + \")\")\n    .attr(\"class\", \"container\");\n  // 准备数据\n  // 节点集\n  let nodes = [\n    { id: 1, name: \"周洁如\", school: \"安泰经济与管理学院\" },\n    { id: 12, name: \"江平开\", school: \"化学化工学院\" },\n    { id: 2, name: \"吕巍\", school: \"安泰经济与管理学院\" },\n    { id: 3, name: \"张鹏翥\", school: \"化学化工学院\" },\n    { id: 4, name: \"蒋炜\", school: \"安泰经济与管理学院\" },\n    { id: 5, name: \"田澎\", school: \"机械动力与工程学院\" },\n    { id: 6, name: \"黄丞\", school: \"机械动力与工程学院\" },\n    { id: 7, name: \"周颖\", school: \"安泰经济与管理学院\" },\n    { id: 8, name: \"顾琴轩\", school: \"安泰经济与管理学院\" },\n    { id: 9, name: \"费一文\", school: \"化学化工学院\" },\n  ];\n  // 边集\n  let tempEdges = [\n    { id: 1, source: 12, target: 5, relation: \"渠道管理\", value: 1.3 },\n    { id: 2, source: 5, target: 6, relation: \" 营销策略\", value: 1 },\n    { id: 3, source: 5, target: 7, relation: \"企业模式\", value: 1 },\n    { id: 4, source: 5, target: 8, relation: \"社交网络\", value: 1 },\n    { id: 5, source: 2, target: 7, relation: \"神经网络\", value: 2 },\n    { id: 6, source: 3, target: 6, relation: \"视网膜\", value: 0.9 },\n    { id: 7, source: 4, target: 8, relation: \"分布式\", value: 1 },\n    { id: 8, source: 6, target: 7, relation: \"计算机\", value: 1.6 },\n    { id: 9, source: 7, target: 8, relation: \"动力学\", value: 0.7 },\n    { id: 10, source: 7, target: 9, relation: \"催化剂\", value: 2 },\n    { id: 11, source: 9, target: 7, relation: \"管理系统\", value: 2 },\n    { id: 12, source: 9, target: 7, relation: \"供应链\", value: 2 },\n    { id: 13, source: 1, target: 6, relation: \"供应链\", value: 2 },\n  ];\n  nodes.forEach((item) => {});\n  // 生成 nodes map\n  let nodesMap = genNodesMap(nodes);\n  let nodesData = [];\n  for (let key in nodesMap) {\n    nodesData.push(nodesMap[key]);\n  }\n  let linkMap = genLinkMap(tempEdges);\n  // 构建 links（source 属性必须从 0 开始）\n  let edges = genLinks(tempEdges);\n  // 设置一个颜色比例尺\n  // let colorScale = d3\n  //   .scaleOrdinal()\n  //   .domain(d3.range(nodesData.length))\n  //   .range(d3.schemeCategory10);\n  // 新建一个力导向图\n  let forceSimulation = d3\n    .forceSimulation()\n    .force(\"link\", d3.forceLink())\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter());\n  // 生成节点数据\n  forceSimulation.nodes(nodesData);\n  // 生成边数据\n  forceSimulation\n    .force(\"link\")\n    .links(edges)\n    .distance(function (d) {\n      // 每一边的长度\n      return d.value * 200;\n    });\n  // 设置图形中心位置\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2)\n    .y(height / 2);\n  // 箭头\n  var marker = g\n    .append(\"g\")\n    .attr(\"class\", \"showLine\")\n    .append(\"marker\")\n    .attr(\"id\", \"resolved\")\n    // .attr(\"markerUnits\",\"strokeWidth\")// 设置为strokeWidth箭头会随着线的粗细发生变化\n    .attr(\"markerUnits\", \"userSpaceOnUse\")\n    .attr(\"viewBox\", \"0 -5 10 10\") // 坐标系的区域\n    .attr(\"refX\", 44) // 箭头坐标\n    .attr(\"refY\", 0)\n    .attr(\"markerWidth\", 10) // 标识的大小\n    .attr(\"markerHeight\", 10)\n    .attr(\"orient\", \"auto\") // 绘制方向，可设定为：auto（自动确认方向）和 角度值\n    .attr(\"stroke-width\", 2) // 箭头宽度\n    .append(\"path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\") // 箭头的路径\n    .attr(\"fill\", edgeColor); // 箭头颜色\n  // 绘制边\n  let links = g\n    .append(\"g\")\n    .selectAll(\"path\")\n    .data(edges)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (link) => genLinkPath(link)) // 遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n    .attr(\"id\", (d, i) => {\n      return \"edgepath\" + d.id;\n    }) // 设置id，用于连线文字\n    .style(\"stroke\", edgeColor) // 颜色\n    .style(\"stroke-width\", 2) // 粗细\n    .attr(\"class\", \"lines\")\n    .attr(\"marker-end\", \"url(#resolved)\"); // 根据箭头标记的id号标记箭头\n  // 边上的文字\n  let linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(edges)\n    .enter()\n    .append(\"text\")\n    .attr(\"class\", \"linksText\")\n    .text(function (d) {\n      return d.relations;\n    })\n    .style(\"font-size\", 14)\n    // .style(\"text-anchor\", \"start\")\n    // .attr(\"transform\", \"rotate(45)\")//_________________\n    .attr(\"fill-opacity\", 0);\n  // 创建分组\n  let gs = g\n    .append(\"g\")\n    .selectAll(\".circleText\")\n    .data(nodesData)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"singleNode\")\n    .attr(\"id\", function (d) {\n      return \"singleNode\" + d.id;\n    })\n    .style(\"cursor\", \"pointer\")\n    .attr(\"transform\", function (d) {\n      let cirX = d.x;\n      let cirY = d.y;\n      return \"translate(\" + cirX + \",\" + cirY + \")\";\n    });\n  // 鼠标交互\n  gs.on(\"mouseover\", function (event, d, i) {\n    // 显示连接线上的文字\n\n    toggleLineText(d, true);\n    toggleLine(links, d, true);\n    toggleNode(gs, d, true);\n  })\n    .on(\"mouseout\", function (event, d, i) {\n      // 隐去连接线上的文字\n      toggleLineText(d, false);\n      toggleLine(links, d, false);\n      toggleNode(gs, d, false);\n    })\n    .on(\n      \"click\",\n      function (event, d, i) {\n        linksText.style(\"fill-opacity\", function (edge) {\n          if (edge.source === d) {\n            return 1;\n          }\n        });\n        toggleCircle(d3.select(this), d);\n      },\n      true\n    )\n    .call(d3.drag().on(\"start\", started).on(\"drag\", dragged).on(\"end\", ended));\n  svg.on(\n    \"click\",\n    function (event) {\n      nodes.forEach((d) => (d.clickFlag = false));\n\n      var target = event.srcElement, //  获取事件发生源\n        data = d3.select(target).datum(); //  获取事件发生源的数据\n      removeSingle();\n      if (!data) {\n        // document.getElementById(\"circle8\").innerText = \"\";\n      }\n    },\n    true\n  );\n  forceSimulation.on(\"tick\", ticked);\n  function toggleLineText(currNode, isHover) {\n    if (isHover) {\n      linksText.style(\"fill-opacity\", function (edge) {\n        if (edge.source === currNode) {\n          return 1;\n        }\n      });\n    } else {\n      linksText.style(\"fill-opacity\", function (edge) {\n        if (edge.source === currNode || edge.target === currNode) {\n          return 0;\n        }\n      });\n    }\n  }\n  function toggleLine(linkLine, currNode, isHover) {\n    if (isHover) {\n      // 加重连线样式\n      links\n        .style(\"opacity\", 0.1)\n        .filter((link) => isLinkLine(currNode, link))\n        .style(\"opacity\", 1)\n        .classed(\"link-active\", true);\n    } else {\n      links.style(\"opacity\", 1).classed(\"link-active\", false);\n    }\n  }\n  /*\n  function showMyList() {\n    var e = { id: 10, name: \"河北\" };\n    var h = { id: 11, name: \"河南\" };\n    var f = { id: 13, source: 9, target: 10, relation: \"222\", value: 2 };\n    nodes.push(e);\n    nodes.push(h);\n    tempEdges.push(f);\n    nodesMap = genNodesMap(nodes);\n    let nodesData = [];\n    for (let key in nodesMap) {\n      nodesData.push(nodesMap[key]);\n    }\n    linkMap = genLinkMap(tempEdges);\n    edges = genLinks(tempEdges);\n    updateData();\n  }\n  */\n  function updateData() {\n    links = links\n      .data(edges, function (d) {})\n      .join(\"path\")\n      .attr(\"id\", (d, i) => {\n        return \"edgepath\" + d.id;\n      }) // 设置id，用于连线文字\n      .style(\"stroke\", edgeColor) // 颜色\n      .style(\"stroke-width\", 2) // 粗细\n      .attr(\"class\", \"lines\")\n      .attr(\"marker-end\", \"url(#resolved)\") // 根据箭头标记的id号标记箭头\n      .merge(links);\n    linksText = linksText\n      .data(edges)\n      .join(\"text\")\n      .attr(\"class\", \"linksText\")\n      .text(function (d) {\n        return d.relations;\n      })\n      // .style(\"text-anchor\", \"start\")\n      // .attr(\"transform\", \"rotate(45)\")\n      .style(\"font-size\", 14)\n      .attr(\"fill-opacity\", 0);\n    gs = gs\n      .data(nodesData, function (d) {})\n      .join(\"g\")\n      .attr(\"class\", \"singleNode\")\n      .attr(\"id\", function (d) {\n        return \"singleNode\" + d.id;\n      })\n      .style(\"cursor\", \"pointer\")\n      .merge(gs)\n      .call(\n        d3.drag().on(\"start\", started).on(\"drag\", dragged).on(\"end\", ended)\n      );\n    gs.append(\"circle\")\n      .attr(\"fill\", function (d) {\n        return colorScale[d.school];\n      })\n      .attr(\"r\", 35)\n      .attr(\"stroke\", edgeColor)\n      .attr(\"stroke-width\", 3);\n    gs.on(\"mouseover\", function (event, d, i) {\n      // 显示连接线上的文字\n      toggleLineText(d, true);\n      toggleLine(links, d, true);\n      toggleNode(gs, d, true);\n    })\n      .on(\"mouseout\", function (event, d, i) {\n        // 隐去连接线上的文字\n        toggleLineText(d, false);\n        toggleLine(links, d, false);\n        toggleNode(gs, d, false);\n      })\n      .on(\n        \"click\",\n        function (event, d, i) {\n          linksText.style(\"fill-opacity\", function (edge) {\n            if (edge.source === d) {\n              return 1;\n            }\n          });\n          toggleCircle(d3.select(this), d);\n        },\n        true\n      );\n    gs.append(\"text\")\n      .attr(\"y\", -20)\n      .attr(\"dy\", 10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 12)\n      .attr(\"x\", function ({ name }) {\n        return textBreaking(d3.select(this), name);\n      });\n    gs.append(\"title\").text((node) => {\n      return node.name;\n    });\n    forceSimulation.nodes(nodesData);\n    forceSimulation.force(\"link\").links(edges);\n    forceSimulation.alpha(0.8).restart();\n  }\n  function getLineTextAngle(d, bbox) {\n    if (d.target.x < d.source.x) {\n      const { x, y, width, height } = bbox;\n      const rx = x + width / 2;\n      const ry = y + height / 2;\n      return \"rotate(180 \" + rx + \" \" + ry + \")\";\n    } else {\n      return \"rotate(0)\";\n    }\n  }\n  function toggleNode(nodeCircle, currNode, isHover) {\n    if (isHover) {\n      // 提升节点层级\n      // nodeCircle.sort((a, b) => a.id === currNode.id ? 1 : -1);\n      // this.parentNode.appendChild(this);\n      nodeCircle\n        .style(\"opacity\", 0.5)\n        .filter((node) => isLinkNode(currNode, node))\n        .style(\"opacity\", 1);\n    } else {\n      nodeCircle.style(\"opacity\", 1);\n    }\n  }\n  function removeSingle() {\n    d3.select(\".singleCircle\").remove();\n  }\n  function toggleCircle(current, d) {\n    var currentD = d;\n    if (d.clickFlag) {\n      removeSingle();\n      // document.getElementById(\"circle8\").innerText = \"\";\n    }\n    d.clickFlag = true;\n    // document.getElementById(\"circle8\").innerText = d.name;\n    var data = [\n      {\n        population: 30,\n        value: \"X\",\n        type: \"delete\",\n      },\n      {\n        population: 30,\n        value: \"收起\",\n        type: \"showOn\",\n      },\n      {\n        population: 30,\n        value: \"展开\",\n        type: \"showOff\",\n      },\n    ];\n    var sum = d3.sum(\n      data.map(function (d) {\n        return d.population;\n      })\n    );\n    for (let i in data) {\n      data[i].Percentage = ((data[i].population / sum) * 100).toFixed(0) + \"%\";\n    }\n    var width = 300,\n      height = 300,\n      margin = { left: 30, top: 30, right: 30, bottom: 30 },\n      svg_width = width + margin.left + margin.right,\n      svg_height = height + margin.top + margin.bottom,\n      font_size = 15;\n    var g = current\n      .append(\"g\")\n      .attr(\"class\", \"singleCircle\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    var Pie = g.append(\"g\");\n\n    var arc_generator = d3\n      .arc()\n      .innerRadius(width / 6.5)\n      .outerRadius(width / 4);\n    var angle_data = d3.pie().value(function (d) {\n      return d.population;\n    });\n    var pieData = angle_data(data);\n    var pieAngle = pieData.map(function (p) {\n      return ((p.startAngle + p.endAngle) / 2 / Math.PI) * 180;\n    });\n\n    // var color=d3.schemeCategory10;\n\n    //生成内部圆环\n    Pie.selectAll(\"path\")\n      .data(angle_data(data))\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc_generator)\n      .style(\"fill\", function (d, i) {\n        switch (i) {\n          case 0:\n            return \"#898778\";\n          case 1:\n            return \"#d1d091\";\n          case 2:\n            return \"#b1aaf1\";\n        }\n      })\n      // .style(\"stroke\", \"black\")\n      .attr(\"class\", \"path\")\n      .attr(\"type\", function (d) {\n        return d.data.type;\n      })\n      .on(\"click\", function (event, d) {\n        if (d.data.type === \"delete\") {\n          deleteNode(currentD);\n        } else if (d.data.type === \"showOn\") {\n          ManipulateNodes(currentD, \"none\");\n        } else {\n          console.log(\"on\");\n          // showMyList();\n          ManipulateNodes(currentD, \"block\");\n        }\n        event.stopPropagation();\n      });\n    var arc_label = d3\n      .arc()\n      .innerRadius(width / 4)\n      .outerRadius(width / 2);\n\n    Pie.selectAll(\".arc_label\")\n      .data(angle_data(data))\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc_label)\n      .attr(\"class\", \"arc_label\")\n      .style(\"fill\", \"none\");\n    const labelFontSize = 12;\n    const labelValRadius = 170 * 0.35 - labelFontSize * 0.35; // 计算正确半径 文字位置\n    const labelValRadius1 = 170 * 0.35 + labelFontSize * 0.35;\n\n    const labelsVals = current\n      .select(\".singleCircle\")\n      .append(\"g\")\n      .classed(\"labelsvals\", true);\n\n    // 定义两条路径以使标签的方向正确\n    labelsVals\n      .append(\"def\")\n      .append(\"path\")\n      .attr(\"id\", \"label-path-1\")\n      .attr(\n        \"d\",\n        `m0 ${-labelValRadius} a${labelValRadius} ${labelValRadius} 0 1,1 -0.01 0`\n      );\n    labelsVals\n      .append(\"def\")\n      .append(\"path\")\n      .attr(\"id\", \"label-path-2\")\n      .attr(\n        \"d\",\n        `m0 ${-labelValRadius1} a${labelValRadius1} ${labelValRadius1} 0 1,0 0.01 0`\n      );\n\n    labelsVals\n      .selectAll(\"text\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", labelFontSize)\n      .style(\"fill\", \"white\")\n      .style(\"font-weight\", \"bold\")\n      .style(\"text-anchor\", \"middle\")\n      .append(\"textPath\")\n      .attr(\"href\", function (d, i) {\n        const p = pieData[i];\n        const angle = pieAngle[i];\n        if (angle > 90 && angle <= 270) {\n          // 根据角度选择路径\n          return \"#label-path-2\";\n        } else {\n          return \"#label-path-1\";\n        }\n      })\n      .attr(\"startOffset\", function (d, i) {\n        const p = pieData[i];\n        const angle = pieAngle[i];\n        let percent = ((p.startAngle + p.endAngle) / 2 / 2 / Math.PI) * 100;\n        if (angle > 90 && angle <= 270) {\n          // 分别计算每条路径的正确百分比\n          return 100 - percent + \"%\";\n        }\n        return percent + \"%\";\n      })\n      .text(function (d) {\n        return d.value;\n      })\n      .on(\n        \"click\",\n        function (event, d) {\n          if (d.type === \"delete\") {\n            deleteNode(currentD);\n          } else if (d.type === \"showOn\") {\n            ManipulateNodes(currentD, \"none\");\n          } else {\n            // showMyList()\n          }\n          event.stopPropagation();\n        },\n        true\n      );\n  }\n  //删除当前节点下一级没有其他关系的节点\n  function ManipulateNodes(curr, type) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    // var removeIndex = nodesData.findIndex(node=>node.id == curr.id)\n    // nodesData.splice(removeIndex,1)\n    // nodes.splice(removeIndex,1)\n    d3.select(this).attr(\"display\", type);\n    let relationNode = [],\n      relationList = [],\n      hasRelationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        hasRelationList.push(e);\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", type);\n        //d3.select(\"#singleNode\" + item.id).remove();\n      }\n    });\n    var otherTempNode = [];\n    tempNodeList = tempNodeList.map((item) => {\n      if (!item.notSingle) {\n        otherTempNode.push(item);\n      }\n    });\n    hasRelationList.forEach((item) => {\n      otherTempNode.forEach((jtem) => {\n        if (jtem.id == item.source.id || jtem.id == item.target.id) {\n          //d3.select(\"#edgepath\" + item.id).remove();\n          d3.select(\"#edgepath\" + item.id).attr(\"display\", type);\n        }\n      });\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", type);\n      }\n    });\n    gs.style(\"opacity\", 1);\n    links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n  //删除当前及下一级没有其他关系的节点\n  function deleteNode(curr) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    var removeIndex = nodesData.findIndex((node) => node.id == curr.id);\n    nodesData.splice(removeIndex, 1);\n    nodes.splice(removeIndex, 1);\n    d3.select(this).remove();\n    let relationNode = [],\n      relationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        // d3.select(\"#singleNode\" + item.id).remove();\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    gs.style(\"opacity\", 1);\n    links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n\n  // 关联节点去重重组\n  function uniqObjInArray(objarray) {\n    let len = objarray.length;\n    let tempJson = {};\n    let res = [];\n    for (let i = 0; i < len; i++) {\n      //取出每一个对象\n      tempJson[JSON.stringify(objarray[i])] = true;\n    }\n    let keyItems = Object.keys(tempJson);\n    for (let j = 0; j < keyItems.length; j++) {\n      res.push(JSON.parse(keyItems[j]));\n    }\n    return res;\n  }\n  function isLinkLine(node, link) {\n    return link.source.id === node.id;\n  }\n  function isLinkNode(currNode, node) {\n    if (currNode.id === node.id) {\n      return true;\n    }\n    return (\n      linkMap[currNode.id + \"-\" + node.id] ||\n      linkMap[node.id + \"-\" + currNode.id]\n    );\n  }\n  function largerNode(nodes, currNode, isHover) {\n    if (isHover) {\n      gs.style(\"stroke-width\", 1)\n        .filter((node) => isNode(currNode, node))\n        .style(\"stroke-width\", 10);\n    } else {\n      gs.style(\"stroke-width\", 1);\n    }\n  }\n  function isNode(node, cNode) {\n    return true;\n  }\n  // 绘制节点\n  gs.append(\"circle\")\n    .attr(\"r\", 35)\n    .attr(\"id\", function (d) {\n      return \"circle\" + d.id;\n    })\n    .attr(\"fill\", function (d, i) {\n      console.log(d);\n      return colorScale[d.school];\n    })\n    .attr(\"stroke\", edgeColor)\n    .attr(\"stroke-width\", 3);\n  // 文字\n  var nodeText = gs\n    .append(\"text\")\n    // .attr('x', -10)\n    .attr(\"y\", -20)\n    .attr(\"dy\", 10)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"font-size\", 12)\n    .attr(\"x\", function ({ name }) {\n      return textBreaking(d3.select(this), name);\n    });\n  gs.append(\"title\").text((node) => {\n    return node.name;\n  });\n\n  function genLinkMap(relations) {\n    const hash = {};\n    relations.map(function ({ source, target, relation }) {\n      const key = source + \"-\" + target;\n      if (hash[key]) {\n        hash[key] += 1;\n        hash[key + \"-relation\"] += \"、\" + relation;\n      } else {\n        hash[key] = 1;\n        hash[key + \"-relation\"] = relation;\n      }\n    });\n    return hash;\n  }\n  function genLinks(relations) {\n    const indexHash = {};\n    return relations.map(function ({ id, source, target, relation, value }, i) {\n      const linkKey = source + \"-\" + target;\n      const count = linkMap[linkKey];\n      if (indexHash[linkKey]) {\n        indexHash[linkKey] -= 1;\n      } else {\n        indexHash[linkKey] = count - 1;\n      }\n      return {\n        id,\n        source: nodesMap[source],\n        target: nodesMap[target],\n        relation,\n        value,\n        relations: linkMap[linkKey + \"-relation\"],\n        count: linkMap[linkKey],\n        index: indexHash[linkKey],\n      };\n    });\n  }\n  // 生成关系连线路径\n  function genLinkPath(link) {\n    const count = link.count;\n    const index = link.index;\n    let sx = link.source.x;\n    let tx = link.target.x;\n    let sy = link.source.y;\n    let ty = link.target.y;\n    return \"M\" + sx + \",\" + sy + \" L\" + tx + \",\" + ty;\n  }\n  function genNodesMap(nodes) {\n    const hash = {};\n    nodes.map(function ({ id, name, school }) {\n      hash[id] = {\n        id,\n        name,\n        school,\n      };\n    });\n    return hash;\n  }\n  // 处理节点文字换行\n  function textBreaking(d3text, text) {\n    const len = text.length;\n    if (len <= 3) {\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", -3)\n        .style(\"fill\", circleWordColor)\n        .text(text);\n    } else {\n      const topText = text.substring(0, 3);\n      const midText = text.substring(3, 7);\n      let botText = text.substring(7, len);\n      let topY = -22;\n      let midY = 8;\n      let botY = 34;\n      if (len <= 9) {\n        topY += 10;\n        midY += 10;\n      } else {\n        botText = text.substring(7, 9) + \"...\";\n      }\n      d3text.text(\"\");\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", topY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return topText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", midY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return midText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", botY - 7)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return botText;\n        });\n    }\n  }\n  // ticked\n  function ticked() {\n    // 连线路径\n    links.attr(\"d\", (link) => genLinkPath(link));\n    // 连线文字位置\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    // 节点位置\n    gs.attr(\"transform\", function (d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n  }\n  // drag\n  function started(event, d) {\n    if (!event.active) {\n      forceSimulation.alphaTarget(0.8).restart(); // 设置衰减系数，对节点位置移动过程的模拟，数值越高移动越快，数值范围[0, 1]\n    }\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n  function ended(event, d) {\n    if (!event.active) {\n      forceSimulation.alphaTarget(0);\n    }\n    d.fx = null;\n    d.fy = null;\n  }\n};\nexport default draw;\n",{"ruleId":"405","severity":1,"message":"406","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":17},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"405","severity":1,"message":"413","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":16},{"ruleId":"405","severity":1,"message":"414","line":2,"column":23,"nodeType":"407","messageId":"408","endLine":2,"endColumn":26},{"ruleId":"405","severity":1,"message":"415","line":13,"column":10,"nodeType":"407","messageId":"408","endLine":13,"endColumn":17},{"ruleId":"405","severity":1,"message":"416","line":13,"column":19,"nodeType":"407","messageId":"408","endLine":13,"endColumn":24},{"ruleId":"405","severity":1,"message":"417","line":18,"column":8,"nodeType":"407","messageId":"408","endLine":18,"endColumn":12},{"ruleId":"405","severity":1,"message":"418","line":23,"column":9,"nodeType":"407","messageId":"408","endLine":23,"endColumn":14},{"ruleId":"405","severity":1,"message":"419","line":23,"column":16,"nodeType":"407","messageId":"408","endLine":23,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":23,"column":25,"nodeType":"407","messageId":"408","endLine":23,"endColumn":31},{"ruleId":"421","severity":1,"message":"422","line":109,"column":46,"nodeType":"423","messageId":"424","endLine":109,"endColumn":48},{"ruleId":"405","severity":1,"message":"425","line":119,"column":11,"nodeType":"407","messageId":"408","endLine":119,"endColumn":15},{"ruleId":"405","severity":1,"message":"426","line":139,"column":7,"nodeType":"407","messageId":"408","endLine":139,"endColumn":11},{"ruleId":"405","severity":1,"message":"427","line":140,"column":7,"nodeType":"407","messageId":"408","endLine":140,"endColumn":19},{"ruleId":"405","severity":1,"message":"428","line":142,"column":7,"nodeType":"407","messageId":"408","endLine":142,"endColumn":21},{"ruleId":"405","severity":1,"message":"429","line":143,"column":7,"nodeType":"407","messageId":"408","endLine":143,"endColumn":11},{"ruleId":"405","severity":1,"message":"430","line":243,"column":9,"nodeType":"407","messageId":"408","endLine":243,"endColumn":21},{"ruleId":"405","severity":1,"message":"431","line":245,"column":7,"nodeType":"407","messageId":"408","endLine":245,"endColumn":11},{"ruleId":"421","severity":1,"message":"432","line":247,"column":20,"nodeType":"423","messageId":"424","endLine":247,"endColumn":22},{"ruleId":"405","severity":1,"message":"433","line":2,"column":8,"nodeType":"407","messageId":"408","endLine":2,"endColumn":9},{"ruleId":"405","severity":1,"message":"434","line":2,"column":13,"nodeType":"407","messageId":"408","endLine":2,"endColumn":18},{"ruleId":"405","severity":1,"message":"435","line":26,"column":7,"nodeType":"407","messageId":"408","endLine":26,"endColumn":14},{"ruleId":"405","severity":1,"message":"436","line":27,"column":7,"nodeType":"407","messageId":"408","endLine":27,"endColumn":12},{"ruleId":"405","severity":1,"message":"437","line":34,"column":34,"nodeType":"407","messageId":"408","endLine":34,"endColumn":42},{"ruleId":"421","severity":1,"message":"422","line":50,"column":27,"nodeType":"423","messageId":"424","endLine":50,"endColumn":29},{"ruleId":"421","severity":1,"message":"422","line":52,"column":15,"nodeType":"423","messageId":"424","endLine":52,"endColumn":17},{"ruleId":"405","severity":1,"message":"438","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":17},{"ruleId":"405","severity":1,"message":"439","line":3,"column":13,"nodeType":"407","messageId":"408","endLine":3,"endColumn":15},{"ruleId":"405","severity":1,"message":"440","line":5,"column":9,"nodeType":"407","messageId":"408","endLine":5,"endColumn":10},{"ruleId":"405","severity":1,"message":"441","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":12},{"ruleId":"405","severity":1,"message":"442","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":19},{"ruleId":"405","severity":1,"message":"427","line":20,"column":18,"nodeType":"407","messageId":"408","endLine":20,"endColumn":30},{"ruleId":"405","severity":1,"message":"443","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"444","line":30,"column":7,"nodeType":"407","messageId":"408","endLine":30,"endColumn":13},{"ruleId":"405","severity":1,"message":"428","line":6,"column":26,"nodeType":"407","messageId":"408","endLine":6,"endColumn":40},{"ruleId":"445","severity":1,"message":"446","line":31,"column":25,"nodeType":"423","messageId":"447","endLine":31,"endColumn":26},{"ruleId":"445","severity":1,"message":"446","line":36,"column":25,"nodeType":"423","messageId":"447","endLine":36,"endColumn":26},{"ruleId":"405","severity":1,"message":"448","line":47,"column":20,"nodeType":"407","messageId":"408","endLine":47,"endColumn":28},{"ruleId":"405","severity":1,"message":"449","line":5,"column":25,"nodeType":"407","messageId":"408","endLine":5,"endColumn":38},{"ruleId":"405","severity":1,"message":"450","line":42,"column":9,"nodeType":"407","messageId":"408","endLine":42,"endColumn":15},{"ruleId":"405","severity":1,"message":"451","line":47,"column":9,"nodeType":"407","messageId":"408","endLine":47,"endColumn":15},{"ruleId":"405","severity":1,"message":"452","line":58,"column":7,"nodeType":"407","messageId":"408","endLine":58,"endColumn":17},{"ruleId":"405","severity":1,"message":"453","line":157,"column":7,"nodeType":"407","messageId":"408","endLine":157,"endColumn":14},{"ruleId":"405","severity":1,"message":"454","line":185,"column":9,"nodeType":"407","messageId":"408","endLine":185,"endColumn":13},{"ruleId":"405","severity":1,"message":"415","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":17},{"ruleId":"405","severity":1,"message":"455","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":16},{"ruleId":"405","severity":1,"message":"428","line":7,"column":26,"nodeType":"407","messageId":"408","endLine":7,"endColumn":40},{"ruleId":"409","replacedBy":"456"},{"ruleId":"411","replacedBy":"457"},{"ruleId":"405","severity":1,"message":"438","line":1,"column":10,"nodeType":"407","messageId":"408","endLine":1,"endColumn":17},{"ruleId":"405","severity":1,"message":"439","line":3,"column":13,"nodeType":"407","messageId":"408","endLine":3,"endColumn":15},{"ruleId":"445","severity":1,"message":"446","line":31,"column":25,"nodeType":"423","messageId":"447","endLine":31,"endColumn":26},{"ruleId":"445","severity":1,"message":"446","line":36,"column":25,"nodeType":"423","messageId":"447","endLine":36,"endColumn":26},{"ruleId":"405","severity":1,"message":"448","line":47,"column":20,"nodeType":"407","messageId":"408","endLine":47,"endColumn":28},{"ruleId":"405","severity":1,"message":"428","line":6,"column":26,"nodeType":"407","messageId":"408","endLine":6,"endColumn":40},{"ruleId":"405","severity":1,"message":"449","line":6,"column":42,"nodeType":"407","messageId":"408","endLine":6,"endColumn":55},{"ruleId":"405","severity":1,"message":"441","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":12},{"ruleId":"405","severity":1,"message":"442","line":5,"column":10,"nodeType":"407","messageId":"408","endLine":5,"endColumn":19},{"ruleId":"405","severity":1,"message":"427","line":21,"column":18,"nodeType":"407","messageId":"408","endLine":21,"endColumn":30},{"ruleId":"421","severity":1,"message":"422","line":64,"column":12,"nodeType":"423","messageId":"424","endLine":64,"endColumn":14},{"ruleId":"405","severity":1,"message":"455","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":16},{"ruleId":"405","severity":1,"message":"428","line":7,"column":26,"nodeType":"407","messageId":"408","endLine":7,"endColumn":40},{"ruleId":"405","severity":1,"message":"458","line":64,"column":11,"nodeType":"407","messageId":"408","endLine":64,"endColumn":12},{"ruleId":"421","severity":1,"message":"432","line":85,"column":24,"nodeType":"423","messageId":"424","endLine":85,"endColumn":26},{"ruleId":"405","severity":1,"message":"433","line":2,"column":8,"nodeType":"407","messageId":"408","endLine":2,"endColumn":9},{"ruleId":"405","severity":1,"message":"434","line":2,"column":13,"nodeType":"407","messageId":"408","endLine":2,"endColumn":18},{"ruleId":"405","severity":1,"message":"455","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":16},{"ruleId":"405","severity":1,"message":"435","line":26,"column":7,"nodeType":"407","messageId":"408","endLine":26,"endColumn":14},{"ruleId":"405","severity":1,"message":"436","line":27,"column":7,"nodeType":"407","messageId":"408","endLine":27,"endColumn":12},{"ruleId":"421","severity":1,"message":"422","line":55,"column":15,"nodeType":"423","messageId":"424","endLine":55,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":56,"column":15,"nodeType":"423","messageId":"424","endLine":56,"endColumn":17},{"ruleId":"405","severity":1,"message":"449","line":5,"column":25,"nodeType":"407","messageId":"408","endLine":5,"endColumn":38},{"ruleId":"405","severity":1,"message":"450","line":42,"column":9,"nodeType":"407","messageId":"408","endLine":42,"endColumn":15},{"ruleId":"405","severity":1,"message":"451","line":47,"column":9,"nodeType":"407","messageId":"408","endLine":47,"endColumn":15},{"ruleId":"405","severity":1,"message":"452","line":58,"column":7,"nodeType":"407","messageId":"408","endLine":58,"endColumn":17},{"ruleId":"405","severity":1,"message":"453","line":157,"column":7,"nodeType":"407","messageId":"408","endLine":157,"endColumn":14},{"ruleId":"405","severity":1,"message":"454","line":185,"column":9,"nodeType":"407","messageId":"408","endLine":185,"endColumn":13},{"ruleId":"405","severity":1,"message":"440","line":5,"column":9,"nodeType":"407","messageId":"408","endLine":5,"endColumn":10},{"ruleId":"405","severity":1,"message":"443","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"444","line":34,"column":7,"nodeType":"407","messageId":"408","endLine":34,"endColumn":13},{"ruleId":"405","severity":1,"message":"415","line":3,"column":10,"nodeType":"407","messageId":"408","endLine":3,"endColumn":17},{"ruleId":"409","replacedBy":"459"},{"ruleId":"411","replacedBy":"460"},{"ruleId":"405","severity":1,"message":"413","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":16},{"ruleId":"405","severity":1,"message":"414","line":2,"column":23,"nodeType":"407","messageId":"408","endLine":2,"endColumn":26},{"ruleId":"405","severity":1,"message":"415","line":7,"column":10,"nodeType":"407","messageId":"408","endLine":7,"endColumn":17},{"ruleId":"405","severity":1,"message":"416","line":7,"column":19,"nodeType":"407","messageId":"408","endLine":7,"endColumn":24},{"ruleId":"405","severity":1,"message":"461","line":13,"column":8,"nodeType":"407","messageId":"408","endLine":13,"endColumn":17},{"ruleId":"405","severity":1,"message":"462","line":14,"column":8,"nodeType":"407","messageId":"408","endLine":14,"endColumn":15},{"ruleId":"405","severity":1,"message":"418","line":19,"column":9,"nodeType":"407","messageId":"408","endLine":19,"endColumn":14},{"ruleId":"405","severity":1,"message":"419","line":19,"column":16,"nodeType":"407","messageId":"408","endLine":19,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":19,"column":25,"nodeType":"407","messageId":"408","endLine":19,"endColumn":31},{"ruleId":"405","severity":1,"message":"426","line":109,"column":11,"nodeType":"407","messageId":"408","endLine":109,"endColumn":15},{"ruleId":"405","severity":1,"message":"449","line":109,"column":17,"nodeType":"407","messageId":"408","endLine":109,"endColumn":30},{"ruleId":"405","severity":1,"message":"428","line":109,"column":32,"nodeType":"407","messageId":"408","endLine":109,"endColumn":46},{"ruleId":"405","severity":1,"message":"463","line":111,"column":9,"nodeType":"407","messageId":"408","endLine":111,"endColumn":12},{"ruleId":"421","severity":1,"message":"432","line":125,"column":40,"nodeType":"423","messageId":"424","endLine":125,"endColumn":42},{"ruleId":"405","severity":1,"message":"448","line":164,"column":11,"nodeType":"407","messageId":"408","endLine":164,"endColumn":19},{"ruleId":"405","severity":1,"message":"426","line":166,"column":7,"nodeType":"407","messageId":"408","endLine":166,"endColumn":11},{"ruleId":"405","severity":1,"message":"427","line":167,"column":7,"nodeType":"407","messageId":"408","endLine":167,"endColumn":19},{"ruleId":"405","severity":1,"message":"428","line":169,"column":7,"nodeType":"407","messageId":"408","endLine":169,"endColumn":21},{"ruleId":"405","severity":1,"message":"429","line":170,"column":7,"nodeType":"407","messageId":"408","endLine":170,"endColumn":11},{"ruleId":"405","severity":1,"message":"426","line":221,"column":7,"nodeType":"407","messageId":"408","endLine":221,"endColumn":11},{"ruleId":"405","severity":1,"message":"464","line":225,"column":7,"nodeType":"407","messageId":"408","endLine":225,"endColumn":12},{"ruleId":"405","severity":1,"message":"465","line":226,"column":7,"nodeType":"407","messageId":"408","endLine":226,"endColumn":12},{"ruleId":"405","severity":1,"message":"466","line":229,"column":7,"nodeType":"407","messageId":"408","endLine":229,"endColumn":16},{"ruleId":"405","severity":1,"message":"467","line":230,"column":7,"nodeType":"407","messageId":"408","endLine":230,"endColumn":19},{"ruleId":"405","severity":1,"message":"430","line":236,"column":9,"nodeType":"407","messageId":"408","endLine":236,"endColumn":21},{"ruleId":"405","severity":1,"message":"431","line":238,"column":7,"nodeType":"407","messageId":"408","endLine":238,"endColumn":11},{"ruleId":"421","severity":1,"message":"432","line":240,"column":20,"nodeType":"423","messageId":"424","endLine":240,"endColumn":22},{"ruleId":"405","severity":1,"message":"413","line":2,"column":10,"nodeType":"407","messageId":"408","endLine":2,"endColumn":16},{"ruleId":"405","severity":1,"message":"414","line":2,"column":23,"nodeType":"407","messageId":"408","endLine":2,"endColumn":26},{"ruleId":"405","severity":1,"message":"415","line":7,"column":10,"nodeType":"407","messageId":"408","endLine":7,"endColumn":17},{"ruleId":"405","severity":1,"message":"416","line":7,"column":19,"nodeType":"407","messageId":"408","endLine":7,"endColumn":24},{"ruleId":"405","severity":1,"message":"468","line":8,"column":8,"nodeType":"407","messageId":"408","endLine":8,"endColumn":18},{"ruleId":"405","severity":1,"message":"469","line":11,"column":8,"nodeType":"407","messageId":"408","endLine":11,"endColumn":14},{"ruleId":"405","severity":1,"message":"417","line":12,"column":8,"nodeType":"407","messageId":"408","endLine":12,"endColumn":12},{"ruleId":"405","severity":1,"message":"470","line":15,"column":8,"nodeType":"407","messageId":"408","endLine":15,"endColumn":13},{"ruleId":"405","severity":1,"message":"471","line":17,"column":8,"nodeType":"407","messageId":"408","endLine":17,"endColumn":12},{"ruleId":"405","severity":1,"message":"418","line":19,"column":9,"nodeType":"407","messageId":"408","endLine":19,"endColumn":14},{"ruleId":"405","severity":1,"message":"419","line":19,"column":16,"nodeType":"407","messageId":"408","endLine":19,"endColumn":23},{"ruleId":"405","severity":1,"message":"420","line":19,"column":25,"nodeType":"407","messageId":"408","endLine":19,"endColumn":31},{"ruleId":"405","severity":1,"message":"426","line":109,"column":11,"nodeType":"407","messageId":"408","endLine":109,"endColumn":15},{"ruleId":"405","severity":1,"message":"449","line":109,"column":17,"nodeType":"407","messageId":"408","endLine":109,"endColumn":30},{"ruleId":"405","severity":1,"message":"428","line":109,"column":32,"nodeType":"407","messageId":"408","endLine":109,"endColumn":46},{"ruleId":"405","severity":1,"message":"463","line":111,"column":9,"nodeType":"407","messageId":"408","endLine":111,"endColumn":12},{"ruleId":"421","severity":1,"message":"432","line":125,"column":40,"nodeType":"423","messageId":"424","endLine":125,"endColumn":42},{"ruleId":"405","severity":1,"message":"448","line":164,"column":11,"nodeType":"407","messageId":"408","endLine":164,"endColumn":19},{"ruleId":"405","severity":1,"message":"426","line":166,"column":7,"nodeType":"407","messageId":"408","endLine":166,"endColumn":11},{"ruleId":"405","severity":1,"message":"427","line":167,"column":7,"nodeType":"407","messageId":"408","endLine":167,"endColumn":19},{"ruleId":"405","severity":1,"message":"428","line":169,"column":7,"nodeType":"407","messageId":"408","endLine":169,"endColumn":21},{"ruleId":"405","severity":1,"message":"429","line":170,"column":7,"nodeType":"407","messageId":"408","endLine":170,"endColumn":11},{"ruleId":"405","severity":1,"message":"428","line":224,"column":7,"nodeType":"407","messageId":"408","endLine":224,"endColumn":21},{"ruleId":"405","severity":1,"message":"472","line":228,"column":7,"nodeType":"407","messageId":"408","endLine":228,"endColumn":17},{"ruleId":"405","severity":1,"message":"430","line":236,"column":9,"nodeType":"407","messageId":"408","endLine":236,"endColumn":21},{"ruleId":"405","severity":1,"message":"431","line":238,"column":7,"nodeType":"407","messageId":"408","endLine":238,"endColumn":11},{"ruleId":"421","severity":1,"message":"432","line":240,"column":20,"nodeType":"423","messageId":"424","endLine":240,"endColumn":22},{"ruleId":"405","severity":1,"message":"473","line":8,"column":9,"nodeType":"407","messageId":"408","endLine":8,"endColumn":13},{"ruleId":"405","severity":1,"message":"474","line":11,"column":9,"nodeType":"407","messageId":"408","endLine":11,"endColumn":20},{"ruleId":"405","severity":1,"message":"475","line":101,"column":7,"nodeType":"407","messageId":"408","endLine":101,"endColumn":13},{"ruleId":"405","severity":1,"message":"476","line":252,"column":12,"nodeType":"407","messageId":"408","endLine":252,"endColumn":22},{"ruleId":"405","severity":1,"message":"477","line":333,"column":12,"nodeType":"407","messageId":"408","endLine":333,"endColumn":28},{"ruleId":"405","severity":1,"message":"478","line":395,"column":7,"nodeType":"407","messageId":"408","endLine":395,"endColumn":16},{"ruleId":"405","severity":1,"message":"479","line":396,"column":7,"nodeType":"407","messageId":"408","endLine":396,"endColumn":17},{"ruleId":"405","severity":1,"message":"480","line":397,"column":7,"nodeType":"407","messageId":"408","endLine":397,"endColumn":16},{"ruleId":"481","severity":1,"message":"482","line":426,"column":9,"nodeType":"483","messageId":"484","endLine":433,"endColumn":10},{"ruleId":"405","severity":1,"message":"485","line":502,"column":15,"nodeType":"407","messageId":"408","endLine":502,"endColumn":16},{"ruleId":"421","severity":1,"message":"432","line":551,"column":23,"nodeType":"423","messageId":"424","endLine":551,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":551,"column":49,"nodeType":"423","messageId":"424","endLine":551,"endColumn":51},{"ruleId":"421","severity":1,"message":"432","line":557,"column":23,"nodeType":"423","messageId":"424","endLine":557,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":561,"column":23,"nodeType":"423","messageId":"424","endLine":561,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":570,"column":34,"nodeType":"423","messageId":"424","endLine":570,"endColumn":36},{"ruleId":"421","severity":1,"message":"432","line":570,"column":63,"nodeType":"423","messageId":"424","endLine":570,"endColumn":65},{"ruleId":"486","severity":1,"message":"487","line":583,"column":44,"nodeType":"488","messageId":"489","endLine":583,"endColumn":46},{"ruleId":"421","severity":1,"message":"432","line":590,"column":21,"nodeType":"423","messageId":"424","endLine":590,"endColumn":23},{"ruleId":"421","severity":1,"message":"432","line":590,"column":50,"nodeType":"423","messageId":"424","endLine":590,"endColumn":52},{"ruleId":"421","severity":1,"message":"432","line":599,"column":16,"nodeType":"423","messageId":"424","endLine":599,"endColumn":18},{"ruleId":"421","severity":1,"message":"432","line":615,"column":61,"nodeType":"423","messageId":"424","endLine":615,"endColumn":63},{"ruleId":"421","severity":1,"message":"432","line":623,"column":23,"nodeType":"423","messageId":"424","endLine":623,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":623,"column":49,"nodeType":"423","messageId":"424","endLine":623,"endColumn":51},{"ruleId":"421","severity":1,"message":"432","line":630,"column":23,"nodeType":"423","messageId":"424","endLine":630,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":634,"column":23,"nodeType":"423","messageId":"424","endLine":634,"endColumn":25},{"ruleId":"421","severity":1,"message":"432","line":643,"column":34,"nodeType":"423","messageId":"424","endLine":643,"endColumn":36},{"ruleId":"421","severity":1,"message":"432","line":643,"column":63,"nodeType":"423","messageId":"424","endLine":643,"endColumn":65},{"ruleId":"421","severity":1,"message":"432","line":658,"column":16,"nodeType":"423","messageId":"424","endLine":658,"endColumn":18},{"ruleId":"405","severity":1,"message":"490","line":701,"column":12,"nodeType":"407","messageId":"408","endLine":701,"endColumn":22},{"ruleId":"405","severity":1,"message":"491","line":726,"column":7,"nodeType":"407","messageId":"408","endLine":726,"endColumn":15},{"ruleId":"486","severity":1,"message":"492","line":742,"column":19,"nodeType":"493","messageId":"489","endLine":742,"endColumn":28},{"ruleId":"405","severity":1,"message":"436","line":778,"column":11,"nodeType":"407","messageId":"408","endLine":778,"endColumn":16},{"ruleId":"405","severity":1,"message":"494","line":779,"column":11,"nodeType":"407","messageId":"408","endLine":779,"endColumn":16},{"ruleId":"486","severity":1,"message":"492","line":788,"column":15,"nodeType":"493","messageId":"489","endLine":788,"endColumn":24},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["495"],"no-negated-in-lhs",["496"],"'select' is defined but never used.","'map' is defined but never used.","'forEach' is defined but never used.","'range' is defined but never used.","'Info' is defined but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'temp' is defined but never used.","'data' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'selectedMentor' is assigned a value but never used.","'Keys' is assigned a value but never used.","'dataScatterE' is assigned a value but never used.","'name' is assigned a value but never used.","Expected '===' and instead saw '=='.","'_' is defined but never used.","'floor' is defined but never used.","'dataPie' is assigned a value but never used.","'count' is assigned a value but never used.","'yearData' is assigned a value but never used.","'Divider' is defined but never used.","'d3' is defined but never used.","'i' is assigned a value but never used.","'draw' is defined but never used.","'selectAll' is defined but never used.","'scaleLinear' is defined but never used.","'legend' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'isMentor' is assigned a value but never used.","'selectedTopic' is assigned a value but never used.","'xScale' is assigned a value but never used.","'yScale' is assigned a value but never used.","'scaleColor' is assigned a value but never used.","'circles' is assigned a value but never used.","'zoom' is assigned a value but never used.","'allTopic' is defined but never used.",["495"],["496"],"'g' is assigned a value but never used.",["495"],["496"],"'Recommend' is defined but never used.","'Scatter' is defined but never used.","'key' is assigned a value but never used.","'dataV' is assigned a value but never used.","'dataE' is assigned a value but never used.","'dataRecom' is assigned a value but never used.","'dataRecomKey' is assigned a value but never used.","'ThemeRiver' is defined but never used.","'Legend' is defined but never used.","'Cloud' is defined but never used.","'Line' is defined but never used.","'dataLegend' is assigned a value but never used.","'text' is assigned a value but never used.","'circleColor' is assigned a value but never used.","'marker' is assigned a value but never used.","'updateData' is defined but never used.","'getLineTextAngle' is defined but never used.","'svg_width' is assigned a value but never used.","'svg_height' is assigned a value but never used.","'font_size' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'p' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'largerNode' is defined but never used.","'nodeText' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","'index' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]