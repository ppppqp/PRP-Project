{"ast":null,"code":"import * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nconst draw = ({\n  data,\n  width,\n  height\n}) => {\n  d3.select(\".vis-linechart > *\").remove();\n  let margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  }; //const width = props.width - margin.left - margin.right;\n  //const height = props.height - margin.top - margin.bottom;\n\n  let svg = d3.select(\".vis-linechart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  data.forEach(function (d) {\n    d.date = +d.year;\n    d.count = +d.datum;\n  }); // Add X axis --> it is a date format\n\n  let x = d3.scaleTime().domain(d3.extent(data, function (d) {\n    return +d.year;\n  })).range([0, width]);\n  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n  var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n    return +d.datum;\n  })]).range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n  svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n    return x(d.year);\n  }).y(function (d) {\n    return y(d.datum);\n  }));\n};\n\nexport default draw;","map":{"version":3,"sources":["/Users/panqp/Documents/React/hw4/src/charts/LineChart/vis.js"],"names":["d3","_","draw","data","width","height","select","remove","margin","top","right","bottom","left","svg","append","attr","forEach","d","date","year","count","datum","x","scaleTime","domain","extent","range","call","axisBottom","y","scaleLinear","max","axisLeft","line"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AACxCL,EAAAA,EAAE,CAACM,MAAH,CAAU,oBAAV,EAAgCC,MAAhC;AACA,MAAIC,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE,EAA9B;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GAAb,CAFwC,CAGxC;AACA;;AACA,MAAIC,GAAG,GAAGb,EAAE,CACTM,MADO,CACA,gBADA,EAEPQ,MAFO,CAEA,KAFA,EAGPC,IAHO,CAGF,OAHE,EAGOX,KAAK,GAAGI,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAHpC,EAIPK,IAJO,CAIF,QAJE,EAIQV,MAAM,GAAGG,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAJrC,EAKPG,MALO,CAKA,GALA,EAMPC,IANO,CAMF,WANE,EAMW,eAAeP,MAAM,CAACI,IAAtB,GAA6B,GAA7B,GAAmCJ,MAAM,CAACC,GAA1C,GAAgD,GAN3D,CAAV;AAQAN,EAAAA,IAAI,CAACa,OAAL,CAAa,UAAUC,CAAV,EAAa;AACxBA,IAAAA,CAAC,CAACC,IAAF,GAAS,CAACD,CAAC,CAACE,IAAZ;AACAF,IAAAA,CAAC,CAACG,KAAF,GAAU,CAACH,CAAC,CAACI,KAAb;AACD,GAHD,EAbwC,CAkBxC;;AACA,MAAIC,CAAC,GAAGtB,EAAE,CACPuB,SADK,GAELC,MAFK,CAGJxB,EAAE,CAACyB,MAAH,CAAUtB,IAAV,EAAgB,UAAUc,CAAV,EAAa;AAC3B,WAAO,CAACA,CAAC,CAACE,IAAV;AACD,GAFD,CAHI,EAOLO,KAPK,CAOC,CAAC,CAAD,EAAItB,KAAJ,CAPD,CAAR;AAQAS,EAAAA,GAAG,CACAC,MADH,CACU,GADV,EAEGC,IAFH,CAEQ,WAFR,EAEqB,iBAAiBV,MAAjB,GAA0B,GAF/C,EAGGsB,IAHH,CAGQ3B,EAAE,CAAC4B,UAAH,CAAcN,CAAd,CAHR,EA3BwC,CAgCxC;;AACA,MAAIO,CAAC,GAAG7B,EAAE,CACP8B,WADK,GAELN,MAFK,CAEE,CACN,CADM,EAENxB,EAAE,CAAC+B,GAAH,CAAO5B,IAAP,EAAa,UAAUc,CAAV,EAAa;AACxB,WAAO,CAACA,CAAC,CAACI,KAAV;AACD,GAFD,CAFM,CAFF,EAQLK,KARK,CAQC,CAACrB,MAAD,EAAS,CAAT,CARD,CAAR;AASAQ,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqB3B,EAAE,CAACgC,QAAH,CAAYH,CAAZ,CAArB,EA1CwC,CA4CxC;;AACAhB,EAAAA,GAAG,CACAC,MADH,CACU,MADV,EAEGO,KAFH,CAESlB,IAFT,EAGGY,IAHH,CAGQ,MAHR,EAGgB,MAHhB,EAIGA,IAJH,CAIQ,QAJR,EAIkB,WAJlB,EAKGA,IALH,CAKQ,cALR,EAKwB,GALxB,EAMGA,IANH,CAOI,GAPJ,EAQIf,EAAE,CACCiC,IADH,GAEGX,CAFH,CAEK,UAAUL,CAAV,EAAa;AACd,WAAOK,CAAC,CAACL,CAAC,CAACE,IAAH,CAAR;AACD,GAJH,EAKGU,CALH,CAKK,UAAUZ,CAAV,EAAa;AACd,WAAOY,CAAC,CAACZ,CAAC,CAACI,KAAH,CAAR;AACD,GAPH,CARJ;AAiBD,CA9DD;;AAgEA,eAAenB,IAAf","sourcesContent":["import * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nconst draw = ({ data, width, height }) => {\n  d3.select(\".vis-linechart > *\").remove();\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  //const width = props.width - margin.left - margin.right;\n  //const height = props.height - margin.top - margin.bottom;\n  let svg = d3\n    .select(\".vis-linechart\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  data.forEach(function (d) {\n    d.date = +d.year;\n    d.count = +d.datum;\n  });\n\n  // Add X axis --> it is a date format\n  let x = d3\n    .scaleTime()\n    .domain(\n      d3.extent(data, function (d) {\n        return +d.year;\n      })\n    )\n    .range([0, width]);\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x));\n\n  // Add Y axis\n  var y = d3\n    .scaleLinear()\n    .domain([\n      0,\n      d3.max(data, function (d) {\n        return +d.datum;\n      }),\n    ])\n    .range([height, 0]);\n  svg.append(\"g\").call(d3.axisLeft(y));\n\n  // Add the line\n  svg\n    .append(\"path\")\n    .datum(data)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"steelblue\")\n    .attr(\"stroke-width\", 1.5)\n    .attr(\n      \"d\",\n      d3\n        .line()\n        .x(function (d) {\n          return x(d.year);\n        })\n        .y(function (d) {\n          return y(d.datum);\n        })\n    );\n};\n\nexport default draw;\n"]},"metadata":{},"sourceType":"module"}