{"ast":null,"code":"var _jsxFileName = \"/Users/panqp/Documents/React/react-app/src/components/movies.jsx\";\n//installed bootstrap, font-awesome\n//command: npm i bootstrap@4.1.1 font-awesome@4.7.0\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../fakeMovieService\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../util/paginate\";\nimport { getGenres } from \"../fakeGenreService\";\nimport { filt } from \"../util/filt\";\nimport ListGroup from \"./filter\";\nimport MoviesTable from \"./movieTable\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      //.map((movie) => (movie[\"liked\"] = false)),\n      pageSize: 4,\n      currentPage: 1,\n      list: [],\n      currentGroup: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movie\n      }; //creating a new object and assign to it rather than modifying directly\n\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGroupChange = group => {\n      console.log(this.state.list);\n      this.setState({\n        currentGroup: group,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPageData = () => {\n      const filtedMovies = filt(this.state.movies, this.state.currentGroup);\n\n      const sorted = _.orderBy(filtedMovies, [this.state.sortColumn.path], [this.state.sortColumn.order]);\n\n      const movies = paginate(sorted, this.state.currentPage, this.state.pageSize);\n      return {\n        totalCount: filtedMovies.length,\n        movies: movies\n      };\n    };\n  }\n\n  getRealMovies() {\n    var movies = getMovies(); //movies.liked = false;\n\n    console.log(movies);\n    return movies;\n  }\n  /*\r\n  constructor() {\r\n    super();\r\n    this.state = getMovies();\r\n  }\r\n  */\n\n\n  componentDidMount() {\n    this.setState({\n      movies: this.getRealMovies(),\n      list: getGenres()\n    });\n  }\n\n  movieList() {\n    const m = this.state.movies;\n    const items = m.map(movie => `<tr>\n\t\t\t<td>${movie._id}</td>\n\t\t\t<td>${movie.title}</td>\n\t\t\t<td>${movie.genre.name}</td>\n\t\t\t<td>${movie.numberInStock}</td>\n      <td>${movie.dailyRentalRate}</td>\n\t\t\t</tr>`);\n    return items;\n  }\n\n  render() {\n    const items = this.movieList();\n    const {\n      totalCount,\n      movies\n    } = this.getPageData();\n    if (this.state.movies.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 48\n      }\n    }, \" No movies. \");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      list: this.state.list,\n      currentGroup: this.state.currentGroup,\n      onGroupChange: this.handleGroupChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"We have \", this.state.movies.length, \" moives in total.\", /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: this.state.sortColumn,\n      onDelete: this.handleDelete,\n      onLike: this.handleLike,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCOunt,\n      pageSize: this.state.pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: this.state.currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }))) //</React.Fragment>\n    ;\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/panqp/Documents/React/react-app/src/components/movies.jsx"],"names":["React","Component","getMovies","Pagination","paginate","getGenres","filt","ListGroup","MoviesTable","_","Movies","state","movies","pageSize","currentPage","list","currentGroup","sortColumn","path","order","handleLike","movie","index","indexOf","liked","setState","handleDelete","filter","m","_id","handlePageChange","page","handleGroupChange","group","console","log","handleSort","getPageData","filtedMovies","sorted","orderBy","totalCount","length","getRealMovies","componentDidMount","movieList","items","map","title","genre","name","numberInStock","dailyRentalRate","render","totalCOunt"],"mappings":"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","sourcesContent":["//installed bootstrap, font-awesome\r\n\r\n//command: npm i bootstrap@4.1.1 font-awesome@4.7.0\r\nimport React, { Component } from \"react\";\r\nimport { getMovies } from \"../fakeMovieService\";\r\n\r\nimport Pagination from \"./pagination\";\r\nimport { paginate } from \"../util/paginate\";\r\nimport { getGenres } from \"../fakeGenreService\";\r\nimport { filt } from \"../util/filt\";\r\nimport ListGroup from \"./filter\";\r\nimport MoviesTable from \"./movieTable\";\r\nimport _ from \"lodash\";\r\nclass Movies extends Component {\r\n  getRealMovies() {\r\n    var movies = getMovies();\r\n    //movies.liked = false;\r\n    console.log(movies);\r\n    return movies;\r\n  }\r\n  /*\r\n  constructor() {\r\n    super();\r\n    this.state = getMovies();\r\n  }\r\n  */\r\n  state = {\r\n    movies: [], //.map((movie) => (movie[\"liked\"] = false)),\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    list: [],\r\n    currentGroup: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ movies: this.getRealMovies(), list: getGenres() });\r\n  }\r\n  movieList() {\r\n    const m = this.state.movies;\r\n    const items = m.map(\r\n      (movie) => `<tr>\r\n\t\t\t<td>${movie._id}</td>\r\n\t\t\t<td>${movie.title}</td>\r\n\t\t\t<td>${movie.genre.name}</td>\r\n\t\t\t<td>${movie.numberInStock}</td>\r\n      <td>${movie.dailyRentalRate}</td>\r\n\t\t\t</tr>`\r\n    );\r\n    return items;\r\n  }\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movie }; //creating a new object and assign to it rather than modifying directly\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies: movies });\r\n  };\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n  handleGroupChange = (group) => {\r\n    console.log(this.state.list);\r\n    this.setState({ currentGroup: group, currentPage: 1 });\r\n  };\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  //<table border=\"1\">{this.movieList}</table>\r\n  getPageData = () => {\r\n    const filtedMovies = filt(this.state.movies, this.state.currentGroup);\r\n    const sorted = _.orderBy(\r\n      filtedMovies,\r\n      [this.state.sortColumn.path],\r\n      [this.state.sortColumn.order]\r\n    );\r\n    const movies = paginate(\r\n      sorted,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n    return { totalCount: filtedMovies.length, movies: movies };\r\n  };\r\n  render() {\r\n    const items = this.movieList();\r\n    const { totalCount, movies } = this.getPageData();\r\n    if (this.state.movies.length === 0) return <p> No movies. </p>;\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            list={this.state.list}\r\n            currentGroup={this.state.currentGroup}\r\n            onGroupChange={this.handleGroupChange}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          We have {this.state.movies.length} moives in total.\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={this.state.sortColumn}\r\n            onDelete={this.handleDelete}\r\n            onLike={this.handleLike}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCOunt}\r\n            pageSize={this.state.pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={this.state.currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n      //</React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}