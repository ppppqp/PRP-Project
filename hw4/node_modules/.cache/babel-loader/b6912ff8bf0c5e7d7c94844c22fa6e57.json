{"ast":null,"code":"import * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nconst draw = props => {\n  /*\n    let data = [];\n    if (props.data !== null) {\n        data = _.cloneDeep(props.data.activities);\n    }\n    d3.select('.vis-linechart > *').remove();\n    let margin = { top: 20, right: 20, bottom: 30, left: 40 }\n    const width = props.width - margin.left - margin.right;;\n    const height = props.height - margin.top - margin.bottom;\n    let svg = d3.select(\".vis-linechart\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n     data.forEach(function (d) {\n        d.date = d3.timeParse(\"%Y-%m-%d\")(d.date);\n        d.count = +d.count;\n    });\n    \n    // Add X axis --> it is a date format\n    let x = d3.scaleTime()\n        .domain(d3.extent(data, function (d) { return d.date; }))\n        .range([0, width]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n     // Add Y axis\n    var y = d3.scaleLinear()\n        .domain([0, d3.max(data, function (d) { return +d.count; })])\n        .range([height, 0]);\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n     // Add the line\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n            .x(function (d) { return x(d.date) })\n            .y(function (d) { return y(d.count) })\n        )\n     */\n};\n\nexport default draw;","map":{"version":3,"sources":["/Users/panqp/Documents/React/test/src/charts/LineChart/vis.js"],"names":["d3","_","draw","props"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDD,CAlDD;;AAoDA,eAAeD,IAAf","sourcesContent":["import * as d3 from \"d3\";\nimport _ from \"lodash\";\n\nconst draw = (props) => {\n  /*\n    let data = [];\n    if (props.data !== null) {\n        data = _.cloneDeep(props.data.activities);\n    }\n    d3.select('.vis-linechart > *').remove();\n    let margin = { top: 20, right: 20, bottom: 30, left: 40 }\n    const width = props.width - margin.left - margin.right;;\n    const height = props.height - margin.top - margin.bottom;\n    let svg = d3.select(\".vis-linechart\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    data.forEach(function (d) {\n        d.date = d3.timeParse(\"%Y-%m-%d\")(d.date);\n        d.count = +d.count;\n    });\n    \n    // Add X axis --> it is a date format\n    let x = d3.scaleTime()\n        .domain(d3.extent(data, function (d) { return d.date; }))\n        .range([0, width]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    // Add Y axis\n    var y = d3.scaleLinear()\n        .domain([0, d3.max(data, function (d) { return +d.count; })])\n        .range([height, 0]);\n    svg.append(\"g\")\n        .call(d3.axisLeft(y));\n\n    // Add the line\n    svg.append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\"d\", d3.line()\n            .x(function (d) { return x(d.date) })\n            .y(function (d) { return y(d.count) })\n        )\n\n    */\n};\n\nexport default draw;\n"]},"metadata":{},"sourceType":"module"}